Class GenericGib : DebrisCore
{
	Default
	{
		Decal "BloodSplat";
		BounceSound "gore/impact";
		//DeathSound "gore/impact";

		Height 4; Radius 2;
		
		Mass 20;
		Speed 8;
		Gravity 0.6;
	  
		+USEBOUNCESTATE +BOUNCEONWALLS +BOUNCEONFLOORS +BOUNCEONACTORS
		BounceType "Doom";
		BounceFactor 0.25;
		
		-COUNTKILL
		
		DebrisCore.RollSpeed 15;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			if (GetCVar("GoreToggle")== 0)
			{
				Destroy();
			}
			A_SetRoll(FRandom(0,359));
			bSPRITEFLIP = RandomPick(0, 1);
		}
		GORE A 0 A_Jump(256, 1,2,3);
		Wait;
		#### A 0;
		Goto Roll;
		#### B 0;
		Goto Roll;
		#### C 0;
		Goto Roll;
	
	Bounce:
		#### # 0
		{
			A_SprayDecal("BloodSplat", 20);
			A_SetRoll(roll + FRandom(-100, 100));
		}
	Roll:
		#### # 8 A_SpawnItemEx("BloodTrail",FRandom(-4, 4),FRandom(-4, 4),FRandom(-4, 4));
		Loop;
	
	Death:
	Crash:
		#### # 350;
		#### # 0 A_JumpIf(GetCVar("GibsStayForever") == 0, "FadeOut");
		#### # 0; //A_JumpIf(GetCVar("GibsStayForever") == 2, "CheckSight");
		Loop;
		
	FadeOut:
		#### # 1 A_FadeOut(0.1);
		Wait;
	
	CheckSight:
		#### # 35 A_CheckSight("FadeOut");
		Loop;
	
	Bye: TNT1 A 0;
		Stop;
	}
}

Class EquestriaBlood : Blood replaces Blood
{
	Default
	{
		Decal "BloodSplat";
		Height 4; Radius 2;
		
		Gravity 0.75;
		Speed 8;
		Mass 2;
		
		+ForceXYBillBoard
		+NOTELEPORT +NOBLOCKMAP
		+CORPSE
		+MISSILE
		+MOVEWITHSECTOR
		+ROLLSPRITE +ROLLCENTER
	}
	States
	{
	Spawn:
		BLUD CBA 15;
		Wait;
		
	Bounce.Wall:
	Death:
		BLUD A 2;
		Stop;
		
	Crash:
		TNT1 A 0 ACS_NamedExecute("CheckLiquid");
		TNT1 A 0 { bSPRITEFLIP = RandomPick(0, 1); A_SetRoll(0); A_SetRenderStyle(1.0, STYLE_Normal); A_SetScale(frandom(0.5, 1), 1); }
		
		BLUD DEF 2 A_FadeOut(FRandom(0.001, 0.1));
		BLUD G 1 A_FadeOut(0.005);
		Wait;
		
	}
	override void Tick()
	{
		if (InStateSequence(CurState, ResolveState("Spawn")) && !isFrozen())
		{
			A_SetRoll((roll + 8), SPF_INTERPOLATE);
		}
		Super.Tick();
	}
}

Class BloodTrail : EquestriaBlood
{
	Default
	{
		RenderStyle "Translucent";
		Alpha 0.75;
		
		Gravity 0.2;
		Scale 0.6;
	}
	States
	{
	Spawn:
		BLUD CBA 25;
		Wait;
		
	Crash:
		TNT1 A 0 ACS_NamedExecute("CheckLiquid");
		TNT1 A 0 { bSPRITEFLIP = RandomPick(0, 1); A_SetRoll(0); A_SetRenderStyle(1.0, STYLE_Normal); }
		
		BLUD DEF 1 A_FadeOut(FRandom(0.01, 0.1));
		BLUD G 1 A_FadeOut(0.01);
		Wait;
	}
}

Class SmallBloodTrail : BloodTrail
{
	Default
	{
		Gravity 0.1;
		Scale 0.5;
	}
	States
	{
	Spawn:
		BLUD CBA 10;
		Wait;
	
	Crash:
		TNT1 A 0 ACS_NamedExecute("CheckLiquid");
		TNT1 A 0 { bSPRITEFLIP = RandomPick(0, 1); A_SetRoll(0); A_SetRenderStyle(1.0, STYLE_Normal); }
		
		POB2 A 1 A_FadeOut(0.025);
		Wait;
	}
}

Class TinyGenericGib : GenericGib
{
	Default
	{
		BounceSound "";
		BounceType "None";
		BounceFactor 0;
		Speed 10;
		DebrisCore.RollSpeed 25;
		
		+SLIDESONWALLS
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			if (GetCVar("GoreToggle")== 0)
			{
				Destroy();
			}
			A_SetRoll(FRandom(0,359));
			bSPRITEFLIP = RandomPick(0, 1);
		}
		GORE D 0 A_Jump(256, 1,2);
		Wait;
		#### D 0;
		Goto Roll;
		#### E 0;
		Goto Roll;
		
	Roll:
		#### # 70 A_SpawnItem("SmallBloodTrail");
		Loop;
	}
}

Class NoBlood_TinyGenericGib : TinyGenericGib
{
	Default { Decal ""; -UseBounceState }
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			if (GetCVar("GoreToggle")== 0)
			{
				Destroy();
			}
			A_SetRoll(FRandom(0,359));
			bSPRITEFLIP = RandomPick(0, 1);
		}
		GORE D 0 A_Jump(256, 1,2);
		Wait;
		#### D 0;
		Goto Roll;
		#### E 0;
		Goto Roll;
		
	Roll:
		#### # 1;
		Loop;
	}
}

Class BigGoreRandom : RandomSpawner
{
	Default
	{
		DropItem "BigGenericGib";
		DropItem "BigGibGore2";
	}
}

Class BigGenericGib : GenericGib
{
	Default
	{
		Height 10; Radius 5;
		
		Mass 50;
		Speed 15;
		Gravity 0.75;
	  
		BounceFactor 0.4;
		
		DebrisCore.RollSpeed 25;
	}
	States
	{
	Spawn:
		BGOR A 0;
		Goto Spawn2;
	
	Spawn2:
		#### # 0
		{
			if (GetCVar("GoreToggle")== 0) 
			{
				Destroy();
			}
			A_SetRoll(FRandom(0,359));
			bSPRITEFLIP = RandomPick(0, 1);
		}
		Goto Roll;
	
	Bounce:
		#### # 0
		{
			A_SprayDecal("BloodSplat", 20);
			A_SetRoll(roll + FRandom(-100, 100));
		}
	Roll:
		#### # 2 A_SpawnItemEx("BloodTrail", FRandom(-10, 10), FRandom(-10, 10), FRandom(-10, 10));
		Loop;
		
	Death:
		BGOR B 350 A_SetRoll(0);
		BGOR B 0 A_JumpIf(GetCVar("GibsStayForever") == 0, "FadeOut");
		BGOR B 0; //A_JumpIf(GetCVar("GibsStayForever") == 2, "CheckSight");
		Loop;
	}
}

Class BigGibGore2 : BigGenericGib
{
	States
	{
	Spawn:
		BGO2 A 0;
		Goto Spawn2;
	
	Death:
		BGO2 B 350 A_SetRoll(0);
		BGO2 B 0 A_JumpIf(GetCVar("GibsStayForever") == 0, "FadeOut");
		BGO2 B 0; //A_JumpIf(GetCVar("GibsStayForever") == 2, "CheckSight");
		Loop;
	}
}

Class XDeathGibber : Actor
{
	Default
	{
		Radius 20; Height 56;
		
		+NOCLIP
		+NOBLOCKMAP
		+NOTELEPORT
		+MOVEWITHSECTOR
		+NOGRAVITY
		+THRUACTORS
		+DONTSPLASH
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			for (int i = 0; i < 10; i++)
			{
				A_SpawnProjectile("GenericGib", FRandom(8, 56), FRandom(-20, 20), FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, -180));	
				A_SpawnProjectile("TinyGenericGib", FRandom(8, 56), FRandom(-20, 20), FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, -180));
			}
		}
		Stop;
	}
}

Class BigGibber : XDeathGibber
{
	States
	{
	Spawn:
		TNT1 AAAAA 0 A_SpawnProjectile("BigGoreRandom", FRandom(8, 32), FRandom(-40, 40), FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, 359));
		Stop;
	}
}

Class BloodExplosion : XDeathGibber
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay { if (GetCVar("GoreToggle")== 0) { Destroy(); } }
		
		TNT1 AAAAA 0 A_SpawnProjectile("BloodTrail", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, -180));
		TNT1 BBBBBB 0 A_SpawnProjectile("SmallBloodTrail", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, -180));
		TNT1 CCCC 0 A_SpawnProjectile("EquestriaBlood", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, -180));
		Stop;
	}
}


Class BloodExplosionSphere : BloodExplosion
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay { if (GetCVar("GoreToggle")== 0) { Destroy(); } }

		TNT1 AAAAA 0 A_SpawnProjectile("BloodTrail", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, 359));
		TNT1 BBBBBB 0 A_SpawnProjectile("SmallBloodTrail", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, 359));
		TNT1 CCCC 0 A_SpawnProjectile("EquestriaBlood", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, 359));
		Stop;
	}
}