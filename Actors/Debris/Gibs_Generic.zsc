Class GenericGib : DebrisCore
{
	Default
	{
		Decal "BloodSplat";
		BounceSound "gore/impact";
		//DeathSound "gore/impact";

		Height 4; Radius 2;
		
		Mass 20;
		Speed 8;
		Gravity 0.6;
	  
		+USEBOUNCESTATE +BOUNCEONWALLS +BOUNCEONFLOORS +BOUNCEONACTORS
		BounceType "Doom";
		BounceFactor 0.25;
		
		-COUNTKILL
		
		DebrisCore.RollSpeed 15;
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			if (GetCVar("GoreToggle")== 0)
				Destroy();
				
			A_SetRoll(FRandom(0,359));
			bSPRITEFLIP = RandomPick(0, 1);
		}
		GORE A 0 A_Jump(256, 1,2,3);
		Wait;
		#### A 0;
		Goto Roll;
		#### B 0;
		Goto Roll;
		#### C 0;
		Goto Roll;
	
	Bounce:
		#### # 0
		{
			A_SprayDecal("BloodSplat", 20,(0,0,0),(0,0,0),true);
			A_SetRoll(roll + FRandom(-90, 90));
		}
		Goto Roll;
		
	Roll:
		#### # 8 A_SpawnItemEx("Equestria_SmallBlood",FRandom(-4, 4),FRandom(-4, 4),FRandom(-4, 4), random(1, 2), random(1, 2),random(-2,2),frandom(0,360),
			SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
		Loop;
		
	Crash:
		#### # 350;
		#### # 0 A_JumpIf(GetCVar("GibsStayForever") == 0, "FadeOut");
		#### # 0; //A_JumpIf(GetCVar("GibsStayForever") == 2, "CheckSight");
		Loop;
		
	FadeOut:
		#### # 1 A_FadeOut(0.1);
		Wait;
	
	CheckSight:
		#### # 35 A_CheckSight("FadeOut");
		Loop;
	
	Bye: TNT1 A 0;
		Stop;
	}
}

Class Equestria_BloodEnemies : Actor
{
	Default { +NOINTERACTION }
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			A_SpawnItemEx("Equestria_Blood",0,0,0, frandom(0,2),frandom(0,2),random(0, 2), frandom(0,360),
				SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
			A_SpawnItemEX("Equestria_SmallBlood",0,0,0, frandom(0,2),frandom(0,2),random(0, 2), frandom(0,360),
				SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
			A_SpawnItemEX("Equestria_TinyBlood",0,0,0, frandom(0,2),frandom(0,2),random(0, 2), frandom(0,360),
				SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
		}
		Stop;
		TNT1 A 0
		{
			A_SpawnItemEX("Equestria_SmallBlood",0,0,0, frandom(0,2),frandom(0,2),random(0, 2), frandom(0,360),
				SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
			A_SpawnItemEX("Equestria_SmallBlood",0,0,0, frandom(0,2),frandom(0,2),random(0, 2), frandom(0,360),
				SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
			A_SpawnItemEX("Equestria_TinyBlood",0,0,0, frandom(0,2),frandom(0,2),random(0, 2), frandom(0,360),
				SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
		}
		Stop;
		TNT1 A 0
		{
			A_SpawnItemEX("Equestria_TinyBlood",0,0,0, frandom(0,2),frandom(0,2),random(0, 2), frandom(0,360),
				SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
			A_SpawnItemEX("Equestria_TinyBlood",0,0,0, frandom(0,2),frandom(0,2),random(0, 2), frandom(0,360),
				SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
		}
		Stop;
	}
}

Class Equestria_BloodSplatter : Actor replaces BloodSplatter
{
	Default{ +NoInteraction }
	States
	{
	Spawn:
		TNT1 AAA 0 NoDelay A_SpawnItemEX("Equestria_Blood", 0,0,0, random(3,6),random(3,6),random(-6,6), frandom(0,360), 
			SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION, 64);
		TNT1 AAA 0 A_SpawnItemEX("Equestria_SmallBlood", 0,0,0, random(3,6),random(3,6),random(-6,6), frandom(0,360), 
			SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
		TNT1 AAA 0 A_SpawnItemEX("Equestria_TinyBlood", 0,0,0, random(3,6),random(3,6),random(-6,6), frandom(0,360), 
			SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
		
		TNT1 AAAAA 0 A_SpawnItemEx("TinyGenericGib",0,0,0, random(1, 4),random(1, 4),random(-4, 4), frandom(0,360), 
			SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
		Stop;
	}
}

Class Equestria_BloodAxe : Actor replaces BloodSplatter
{
	Default{ +NoInteraction }
	States
	{
	Spawn:
		TNT1 AAAAA 0 NoDelay A_SpawnItemEX("Equestria_Blood", 0,0,0, random(3,6),random(3,6),random(-6,6), frandom(0,360), 
			SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION, 128);
		TNT1 AAA 0 A_SpawnItemEx("TinyGenericGib",0,0,0, random(1, 4),random(1, 4),random(-4, 4), frandom(0,360), 
			SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION, 128);
		Stop;
	}
}

Class Equestria_BloodExplosion : DEParticles
{
	Default
	{
		Speed 0;
		RenderStyle "Translucent"; Alpha 0.75;
		+NOINTERACTION
		+ZDOOMTRANS
		
		Height 0; Radius 0;
	}
	States
	{
	Spawn:
		TNT1 A random(0,8) NoDelay A_SetScale(frandom(0.5, 1.0));
		EXP2 A random(3,6) 
		{
			A_StartSound("weapons/rocklx");
			for (int i = 0; i < 4; i++)
			{
				A_SpawnProjectile("Equestria_TinyBlood", 0, 0, FRandom (0, 360), CMF_AIMDIRECTION, FRandom (0, 360));
				A_SpawnProjectile("Equestria_SmallBlood", 0, 0, FRandom (0, 360), CMF_AIMDIRECTION, FRandom (0, 360));
				A_SpawnProjectile("Equestria_Blood", 0, 0, FRandom (0, 360), CMF_AIMDIRECTION, FRandom (0, 360));
			}
		}
		EXP2 B 4;
		EXP2 C 1 A_FadeOut(0.1);
		Wait;
	}
}

Class Equestria_Blood : Actor replaces Blood
{
	Default
	{
		Decal "BloodSplat";
		Height 4; Radius 2;
		
		Gravity 0.5;
		Speed 4;
		Mass 2;
		
		+ForceXYBillBoard
		+NOTELEPORT +NOBLOCKMAP
		+CORPSE
		+THRUACTORS
		+MISSILE
		+MOVEWITHSECTOR
		+ROLLSPRITE +ROLLCENTER
		
		DistanceCheck "CV_BLOODDISTANCE";
		DeathSound "gore/bloodimpact";
	}
	
	static const string liquidfloor[] =
	{
		"FWATER1","FWATER2","FWATER3","FWATER4",
		"SLIME01","SLIME02","SLIME03","SLIME04",
		"SLIME05","SLIME06","SLIME07","SLIME08",
		"BLOOD1","BLOOD2","BLOOD3",
		"NUKAGE1","NUKAGE2","NUKAGE3","LAVA1",
		"LAVA2","LAVA3","LAVA4"
	};
		
	States
	{
	Spawn:
		BLUD C 15 NoDelay A_SetRoll(frandom(0, 360));
		BLUD BA 15;
		Stop;
	
	Death:
		#### # 2
		{
			string floorname = TexMan.GetName(floorpic);
			for (int i = 0; i < liquidfloor.size(); i++)
			{
				if (floorname == liquidfloor[i])
					Destroy();
			}
		}
		Stop;
	
	Crash:
		#### # 0
		{
			ACS_NamedExecute("CheckLiquid");
			
			bNOINTERACTION = 1; bRELATIVETOFLOOR = 1; bMISSILE = 0;
			
			A_Stop();
			A_SetRenderStyle(1.0, STYLE_Translucent); 
			
			if(GetCVar("CV_FLATDECALS"))
			{
				bFLATSPRITE = 1;
				return ResolveState("FlatPool");
			}
			else
			{
				bSPRITEFLIP = RandomPick(0, 1);
				
				A_SetRoll(0);
				A_SetScale(frandom(0.5, 1), 1);
				
				return ResolveState("SpritePool");
			}
			
			return state(null);
		}
		Wait;

	
	SpritePool:
		BLUD EF 2;
		BLUD G 1 A_FadeOut(0.005);
		Wait;
		
	FlatPool:
		#### # 0 A_CheckProximity("Null", "Equestria_Blood", 64, 4);
		#### # 0 A_Jump(256, 1, 2, 3);
		Wait;
		FLAT G 0;
		Goto PoolTimer;
		FLAT I 0;
		Goto PoolTimer;
		FLAT J 0;
		Goto PoolTimer;
	
	PoolTimer:
		#### # 350 A_CheckSight(+1);
		#### # 0 A_JumpIf(GetCVar("GibsStayForever") == 0, +1);
		Loop;
		#### # 1 A_FadeOut(0.1, FTF_REMOVE);
		Wait;
		
	Spray:
		TNT1 A 0
		{
			for (int i = 0; i < 4; i++)
				A_SpawnItemEX("Equestria_SmallBlood",0,0,0, 2,2,2, frandom(0,360),
					SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION, 64);
			
			for (int i = 0; i < 4; i++)
				A_SpawnItemEX("Equestria_SmallBlood",0,0,0, 1,1,1, frandom(0,360),
					SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION, 128);
		}
		Stop;
		
	}
	override void Tick()
	{
		if (waterlevel > 0)
			A_FadeOut(0.1, FTF_REMOVE);
		if (InStateSequence(CurState, ResolveState("Spawn")) && !isFrozen())
			A_SetRoll((roll + speed), SPF_INTERPOLATE);
		else if (InStateSequence(CurState, ResolveState("Falling")) && !isFrozen())
			A_SetRoll((roll + speed), SPF_INTERPOLATE);
		
		Super.Tick();
	}
}

Class Equestria_SmallBlood : Equestria_Blood
{
	Default
	{
		RenderStyle "Translucent";
		Alpha 0.75;
		
		Gravity 0.4;
	}
	States
	{
	Spawn:
		BLUD B 0 NoDelay A_SetRoll(random(0,360));
		BLUD A 1 A_FadeOut(0.01, FTF_REMOVE);
		Wait;
	
	FlatPool:
		#### # 0 A_Jump(256, 1, 2);
		Wait;
		FLAT J -1;
		Goto PoolTimer;
		FLAT K -1;
		Goto PoolTimer;
		
	SpritePool:	
		BLUD DEF 1 A_FadeOut(FRandom(0.01, 0.1));
		BLUD G 1 A_FadeOut(0.01);
		Wait;
	}
}

Class Equestria_TinyBlood : Equestria_SmallBlood
{
	Default
	{
		Gravity 0.2;
	}
	States
	{
	Spawn:
		BLUD A 0 NoDelay A_SetRoll(random(0,360));
		BLUD A 1 A_FadeOut(0.01, FTF_REMOVE);
		Wait;
	
	Death:
		#### # 4;
		Stop;
		
	Crash:
		#### # 1 A_FadeOut(0.01, FTF_REMOVE);
		Wait;
	}
}

Class TinyGenericGib : GenericGib
{
	Default
	{
		BounceSound "";
		BounceType "None";
		BounceFactor 0;
		Speed 10;
		DebrisCore.RollSpeed 25;
		
		+SLIDESONWALLS
	}
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			if (GetCVar("GoreToggle")== 0)
				Destroy();
				
			A_SetRoll(FRandom(0,359));
			bSPRITEFLIP = RandomPick(0, 1);
		}
		GORE D 0 A_Jump(256, 1,2);
		Wait;
		#### D 0;
		Goto Roll;
		#### E 0;
		Goto Roll;
		
	Roll:
		#### # 70 A_SpawnItemEx("Equestria_TinyBlood", FRandom(-4, 4),FRandom(-4, 4),FRandom(-4, 4), random(1, 2), random(1, 2),random(-2,2),frandom(0,360), SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
		Loop;
	}
}

Class NoBlood_TinyGenericGib : TinyGenericGib
{
	Default { Decal ""; -UseBounceState }
	States
	{
	Spawn:
		TNT1 A 0 NoDelay
		{
			if (GetCVar("GoreToggle")== 0)
			{
				Destroy();
			}
			A_SetRoll(FRandom(0,359));
			bSPRITEFLIP = RandomPick(0, 1);
		}
		GORE D 0 A_Jump(256, 1,2);
		Wait;
		#### D 0;
		Goto Roll;
		#### E 0;
		Goto Roll;
		
	Roll:
		#### # 1;
		Loop;
	}
}

Class BigGoreRandom : RandomSpawner
{
	Default
	{
		DropItem "BigGenericGib";
		DropItem "BigGibGore2";
	}
}

Class BigGenericGib : GenericGib
{
	Default
	{
		Height 10; Radius 5;
		
		Mass 50;
		Speed 15;
		Gravity 0.75;
	  
		BounceFactor 0.4;
		
		DebrisCore.RollSpeed 25;
	}
	States
	{
	Spawn:
		BGOR A 0;
		Goto Spawn2;
	
	Spawn2:
		#### # 0
		{
			if (GetCVar("GoreToggle")== 0) 
			{
				Destroy();
			}
			A_SetRoll(FRandom(0,359));
			bSPRITEFLIP = RandomPick(0, 1);
		}
		Goto Roll;
	
	Bounce:
		#### # 0
		{
			A_SprayDecal("BloodSplat", 20,(0,0,0),(0,0,0),true);
			A_SetRoll(roll + FRandom(-100, 100));
		}
	Roll:
		#### # 4 A_SpawnItemEx("Equestria_Blood", FRandom(-10, 10), FRandom(-10, 10), FRandom(-10, 10), random(-1,1),random(-1,1),random(-1,1),0, SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_ABSOLUTEANGLE | SXF_ABSOLUTEVELOCITY | SXF_NOCHECKPOSITION);
		Loop;
		
	Crash:
		#### B 350 A_SetRoll(0);
		#### # 0 A_JumpIf(GetCVar("CV_DEBRISQUALITY") == 2, +1);
		Goto Death;
		#### # 1 A_FadeOut(0.1, FTF_REMOVE);
		Wait;
	}
}

Class BigGibGore2 : BigGenericGib
{
	States
	{
	Spawn:
		BGO2 A 0;
		Goto Spawn2;
	
	Crash:
		#### B 350 A_SetRoll(0);
		#### # 0 A_JumpIf(GetCVar("CV_DEBRISQUALITY") == 2, +1);
		Goto Death;
		#### # 1 A_FadeOut(0.1, FTF_REMOVE);
		Wait;
	}
}

Class BloodExplosion : Actor
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay { if (GetCVar("GoreToggle")== 0) { Destroy(); } }
		
		TNT1 AAAAA 0 A_SpawnProjectile("Equestria_SmallBlood", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, -180));
		TNT1 BBBBBB 0 A_SpawnProjectile("Equestria_TinyBlood", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, -180));
		TNT1 CCCC 0 A_SpawnProjectile("Equestria_Blood", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, -180));
		Stop;
	}
}


Class BloodExplosionSphere : BloodExplosion
{
	States
	{
	Spawn:
		TNT1 A 0 NoDelay { if (GetCVar("GoreToggle")== 0) { Destroy(); } }

		TNT1 AAAAA 0 A_SpawnProjectile("Equestria_SmallBlood", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, 359));
		TNT1 BBBBBB 0 A_SpawnProjectile("Equestria_TinyBlood", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, 359));
		TNT1 CCCC 0 A_SpawnProjectile("Equestria_Blood", 0, 0, FRandom (0, 359), CMF_AIMDIRECTION, FRandom (0, 359));
		Stop;
	}
}