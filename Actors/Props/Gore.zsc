#include "Actors/Props/DeadThings.zsc"

Class EquestriaGoreProps : Actor
{
	Default { +CASTSPRITESHADOW +SOLID +CORPSE}
	override void BeginPlay()
	{
		bSPRITEFLIP = randompick(0,1);
		A_SpawnItemEx("EquestriaSmallBloodPool",0,0,0,0,0,0,random(0, 359));
	}
	/*	
		int ponypose;
		int equestriaspecie;
		int ponycolor;
		
		ponycolor = random(1,15);
		
		switch(ponycolor)
		{
		case 1:	A_SetTranslation("White");	break;
		case 2:	A_SetTranslation("Gray");	break;
		case 3: A_SetTranslation("DarkGray");	break;
		case 4: A_SetTranslation("LightishRed");	break;
		case 5: A_SetTranslation("Red");	break;
		case 6: A_SetTranslation("DarkRed");	break;
		case 7: A_SetTranslation("Blue");	break;
		case 8: A_SetTranslation("DarkBlue");	break;
		case 9: A_SetTranslation("LimeGreen");	break;
		case 10: A_SetTranslation("Green");	break;
		case 11: A_SetTranslation("Gold");	break;
		case 12: A_SetTranslation("Orange");	break;
		case 13: A_SetTranslation("Beige");	break;
		case 14: A_SetTranslation("Brown");	break;
		case 15: A_SetTranslation("Bronze");	break;
		}
		
		ponypose = random(1,2);
		
		if(ponypose = 2) //&& !ponycolor == 1 || !ponycolor == 3) //idk, if it is a zebra, dont change color, bleh
			sprite = getspriteindex("SPOS");
		//I'm not sure if I should do this, it will be a lot of work to make the sprites
		
	}*/
	States
	{
	
	//	Thinking about making more species
	//	Change to: Choose the species first and then choose the color, I have never seen a green zebra
	
	Spawn:
		TNT1 A 0 NoDelay A_Jump(256, 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15);
		Wait;
		
	White:			#### # 0 { A_SetTranslation("White");		return ResolveState("Species"); }	Wait;
	Gray:			#### # 0 { A_SetTranslation("Gray");		return ResolveState("Species"); }	Wait;
	DarkGray:		#### # 0 { A_SetTranslation("DarkGray");	return ResolveState("Species"); }	Wait;
	
	LightishRed:	#### # 0 { A_SetTranslation("LightishRed");	return ResolveState("Species"); }	Wait;
	Red:			#### # 0 { A_SetTranslation("Red");			return ResolveState("Species"); }	Wait;
	DarkRed:		#### # 0 { A_SetTranslation("DarkRed");		return ResolveState("Species"); }	Wait;
	
	Blue:			#### # 0 { A_SetTranslation("Blue");		return ResolveState("Species"); }	Wait;
	DarkBlue:		#### # 0 { A_SetTranslation("DarkBlue");	return ResolveState("Species"); }	Wait;
	
	LimeGreen:		#### # 0 { A_SetTranslation("LimeGreen");	return ResolveState("Species"); }	Wait;
	Green: 			#### # 0 { A_SetTranslation("Green");		return ResolveState("Species"); }	Wait;
	
	Gold:			#### # 0 { A_SetTranslation("Gold");		return ResolveState("Species"); }	Wait;
	Orange:			#### # 0 { A_SetTranslation("Orange");		return ResolveState("Species"); }	Wait;
	Beige:			#### # 0 { A_SetTranslation("Beige");		return ResolveState("Species"); }	Wait;
	Brown:			#### # 0 { A_SetTranslation("Brown");		return ResolveState("Species"); }	Wait;
	Bronze:			#### # 0 { A_SetTranslation("Bronze");		return ResolveState("Species"); }	Wait;
	}
}

Class Equestria_BloodProp : Actor
{
	Default
	{
		+MISSILE
		Height 8; Radius 1.5;
		Gravity 0.25;
	}
	States
	{
	Spawn:
		BLUD D 1;
		Wait;
		
	/*Death:
		#### # 0
		{
			ACS_NamedExecute("CheckLiquid");
			
			bNOINTERACTION = 1; bRELATIVETOFLOOR = 1; bMISSILE = 0;
			
			A_Stop();
			A_SetRenderStyle(1.0, STYLE_Translucent); 
			
			if(GetCVar("CV_FLATDECALS"))
			{
				bFLATSPRITE = 1;
				return ResolveState("FlatPool");
			}
			else
			{
				bSPRITEFLIP = RandomPick(0, 1);
				
				A_SetRoll(0);
				A_SetScale(frandom(0.5, 1), 1);
				
				return ResolveState("SpritePool");
			}
			
			return state(null);
		}
		Wait;
	
	SpritePool:
		BLUD EF 2;
		BLUD G 1 A_FadeOut(0.005);
		Wait;
		
	FlatPool:
		FLAT J -1 A_FadeOut(0.005, FTF_REMOVE);
		Wait;*/
	}
}

Class EquestriaSmallBloodPool : SmallBloodPool replaces SmallBloodPool
{	Default	{ Height 5; Radius 16; +ForceXYBillboard +FLATSPRITE +CORPSE +RELATIVETOFLOOR +MOVEWITHSECTOR } 
	States
	{
	Spawn:
		TNT1 A 0 A_Jump(256, 1, 2);
		Wait;
		FLAT G -1;
		Stop;
		FLAT H -1;
		Stop;
}}

Class EquestriaBrainStem : BrainStem replaces BrainStem
{	Default	{ Height 5; Radius 14.5; +ForceXYBillboard }
	States
	{
	Spawn:
		BRS1 A -1 NoDelay A_SpawnItem("EquestriaSmallBloodPool");
		Stop;
}}

Class EquestriaGibs : Gibs replaces Gibs
{	Default	{ Height 5; Radius 27.5; +ForceXYBillboard }
	States
	{
	Spawn:
		POL5 A -1 NoDelay A_SpawnItem("EquestriaSmallBloodPool");
		Stop;
}}

Class EquestriaColonGibs : ColonGibs replaces ColonGibs
{	Default	{ Height 5; Radius 20.5; +ForceXYBillboard }
	States
	{
	Spawn:
		POB1 A -1 NoDelay A_SpawnItem("EquestriaSmallBloodPool");
		Stop;
}}

Class Equestria_BloodyTwitch : EquestriaGoreProps replaces BloodyTwitch
{
	Default
	{
		Height 55; Radius 7;
		+NOGRAVITY +SPAWNCEILING
		//$Sprite GOR1A0
	}
	States
	{
	Species:
	//	TO DO	TO DO	TO DO	TO DO	TO DO	TO DO	TO DO	TO DO	TO DO
	Prop:
		GOR1 BABCB random(3, 10) A_SpawnItemEx("Equestria_BloodProp",frandom(radius * -1, radius),frandom(radius * -1, radius),frandom(8, height - 8),0,0,0,0,0,128);
		Loop;
	}
}

// Meat

Class EquestriaMeat2 : Meat2 replaces Meat2
{
	Default
	{
		Radius 10;
		+NOGRAVITY +SPAWNCEILING
		//$Sprite GOR2A0
	}
	States
	{
	Spawn:
		GOR2 A random(3, 10) A_SpawnItemEx("Equestria_BloodProp",frandom(radius * -1, radius),frandom(radius * -1, radius),frandom(8, height - 8),0,0,0,0,0,128);
		Loop;
	}
}

Class EquestriaMeat3 : EquestriaGoreProps replaces Meat3
{
	Default
	{
		Height 81; Radius 8;
		+NOGRAVITY +SPAWNCEILING
		//$Sprite GOR3A0
	}
	States
	{
	
	Species:
	Prop:
		GOR3 A random(3, 10) A_SpawnItemEx("Equestria_BloodProp",frandom(radius * -1, radius),frandom(radius * -1, radius),frandom(8, height - 8),0,0,0,0,0,128);
		Loop;
	}
}

Class EquestriaMeat4 : EquestriaGoreProps replaces Meat4
{
	Default
	{
		Height 57; Radius 6.5;
		+NOGRAVITY +SPAWNCEILING
		//$Sprite GOR4A0
	}
	States
	{
	Species:
	Prop:
		GOR4 A random(3, 10) A_SpawnItemEx("Equestria_BloodProp",frandom(radius * -1, radius),frandom(radius * -1, radius),frandom(8, height - 8),0,0,0,0,0,128);
		Loop;
	}
}

Class EquestriaMeat5 : EquestriaGoreProps replaces Meat5
{
	Default
	{
		Height 42; Radius 7;
		+NOGRAVITY +SPAWNCEILING
		//$Sprite GOR5A0
	}
	States
	{
	Species:
	Prop:
		GOR5 A random(3, 10) A_SpawnItemEx("Equestria_BloodProp",frandom(radius * -1, radius),frandom(radius * -1, radius),frandom(8, height - 8),0,0,0,0,0,128);
		Loop;
	}
}

Class EquestriaNonsolidMeat2 : EquestriaMeat2 replaces NonsolidMeat2
{Default{ -SOLID }}

Class EquestriaNonsolidMeat3 : EquestriaMeat3 replaces NonsolidMeat3
{Default{ -SOLID }}

Class EquestriaNonsolidMeat4 : EquestriaMeat4 replaces NonsolidMeat4
{Default{ -SOLID }}

Class EquestriaNonsolidMeat5 : EquestriaMeat5 replaces NonsolidMeat5
{Default{ -SOLID }}

Class EquestriaNonsolidTwitch : Equestria_BloodyTwitch replaces NonsolidTwitch
{Default{ -SOLID }}
	
//

Class EquestriaHeadOnAStick : EquestriaGoreProps replaces HeadOnAStick
{
	Default
	{
		Height 56; Radius 2;
		//$Sprite POL4A0
	}
	States
	{
	Species:
	Prop:
		POL4 A -1 A_SpawnItem("EquestriaSmallBloodPool");
		Stop;
}}

Class EquestriaHeadsOnAStick : HeadsOnAStick replaces HeadsOnAStick
{Default { Radius 2; +CASTSPRITESHADOW }}

Class DeadAnimalWall : EquestriaGoreProps
{	Default {  +WALLSPRITE -SOLID -CASTSPRITESHADOW}
	States {
	Spawn:
		FLT2 A 0 NoDelay { bSPRITEFLIP = RandomPick(0,1); }
		FLT2 A 0 A_Jump(256, 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15);
		Wait;
		
	White:			#### # -1 A_SetTranslation("White");		Stop;
	Gray:			#### # -1 A_SetTranslation("Gray");			Stop;
	DarkGray:		#### # -1 A_SetTranslation("DarkGray");		Stop;
	
	LightishRed:	#### # -1 A_SetTranslation("LightishRed");	Stop;
	Red:			#### # -1 A_SetTranslation("Red");			Stop;
	DarkRed:		#### # -1 A_SetTranslation("DarkRed");		Stop;
	
	Blue:			#### # -1 A_SetTranslation("Blue");			Stop;
	DarkBlue:		#### # -1 A_SetTranslation("DarkBlue");		Stop;
	
	LimeGreen:		#### # -1 A_SetTranslation("LimeGreen");	Stop;
	Green: 			#### # -1 A_SetTranslation("Green");		Stop;
	
	Gold:			#### # -1 A_SetTranslation("Gold");			Stop;
	Orange:			#### # -1 A_SetTranslation("Orange");		Stop;
	Beige:			#### # -1 A_SetTranslation("Beige");		Stop;
	Brown:			#### # -1 A_SetTranslation("Brown");		Stop;
	Bronze:			#### # -1 A_SetTranslation("Bronze");		Stop;
	
	}
}

class EquestriaDeadStick : Actor replaces DeadStick
{
	Default
	{
		Radius 16; Height 64;
		ProjectilePassHeight -16;
		+SOLID +CASTSPRITESHADOW
	}
	States
	{
	Spawn:
		POL1 A -1;
		Stop;
	}
}

class EquestriaLiveStick : EquestriaGoreProps replaces LiveStick
{
	Default
	{
		//$Sprite POL6A0
		Radius 16; Height 64;
		+SOLID
	}
	States
	{
	Species:
	Prop:
		POL6 AB random(6, 8);
		Loop;
	}
}

Class EquestriaHangNoGuts : Actor replaces HangNoGuts
{
	Default
	{
		Radius 16; Height 88;
		+SOLID
		+NOGRAVITY
		+SPAWNCEILING
		+CASTSPRITESHADOW
	}
	States
	{
	Spawn:
		HDB1 A -1;
		Stop;
	}
}

Class EquestriaHangBNoBrain : EquestriaHangNoGuts replaces HangBNoBrain
{
	States
	{
	Spawn:
		HDB2 A -1;
		Stop;
	}
}

Class EquestriaHangTLookingDown : EquestriaHangNoGuts replaces HangTLookingDown
{
	Default
	{
		Height 64;
	}
	States
	{
	Spawn:
		HDB3 A -1;
		Stop;
	}
}

Class EquestriaHangTLookingUp : EquestriaHangTLookingDown replaces HangTLookingUp
{
	States
	{
	Spawn:
		HDB5 A -1;
		Stop;
	}
}

Class EquestriaHangTSkull : EquestriaHangTLookingDown replaces HangTSkull
{
	States
	{
	Spawn:
		HDB4 A -1;
		Stop;
	}
}

class EquestriaHangTNoBrain : EquestriaHangTLookingDown replaces HangTNoBrain
{
	States
	{
	Spawn:
		HDB6 A -1;
		Stop;
	}
}

/////


Class BloodSmear1 : FlatProps
{	States	{
	Spawn:
		FLAT E -1 NoDelay { bSPRITEFLIP = RandomPick(0,1); }	Stop;
}	}

Class BloodSmear2 : FlatProps
{	States	{
	Spawn:
		FLAT F -1 NoDelay { bSPRITEFLIP = RandomPick(0,1); }	Stop;
}	}

Class BloodSplat1 : FlatProps
{	States	{
	Spawn:
		FLAT G -1 NoDelay { bSPRITEFLIP = RandomPick(0,1); }	Stop;
}	}

Class BloodSplat2 : FlatProps
{	States	{
	Spawn:
		FLAT H -1 NoDelay { bSPRITEFLIP = RandomPick(0,1); }	Stop;
}	}