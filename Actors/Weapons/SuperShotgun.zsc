Class EquestriaSuperShotgun : EquestriaDoomWeapon replaces SuperShotgun
{
	Default
	{
		//$Title Super Shotgun
		Tag "$TAG_SUPERSHOTGUN";
		
		Weapon.SelectionOrder 2;
		Weapon.AmmoUse 2;
		Weapon.AmmoGive 8;
		Weapon.AmmoType "Shell";
		
		Inventory.PickupMessage "$GOTSHOTGUN2";
		Obituary "$OB_MPSSHOTGUN";
		
		AttackSound "weapons/sshotf";
	}
	States
	{
	Spawn:
		SGN2 A -1 NoDelay { bSPRITEFLIP = RandomPick(0,1); }
		Stop;

	Select:
		SHT2 A 0 Offset(-67, 100) A_SetCrossHair(10);

		#### D 1 A_WeaponOffset(-54, 81, WOF_INTERPOLATE);
		#### D 1 A_WeaponOffset(-32, 69, WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(-22, 58, WOF_INTERPOLATE);
		#### C 1 A_WeaponOffset(-10, 47, WOF_INTERPOLATE);
		#### B 1 A_WeaponOffset(-7, 39, WOF_INTERPOLATE);
		#### B 1 A_WeaponOffset(-2, 34, WOF_INTERPOLATE);
		#### # 0 A_Raise();
		Wait;
	
	Deselect:
		TNT1 A 0 {
			if(health <= 0)
				return ResolveState("DeathCheck");
			return ResolveState(null);
		}
		
		SHT2 A 1 A_Lower();
		Wait;
		
	Deselect2:
		TNT1 A 0 {
			if(health <= 0)
				return ResolveState("DeathCheck");
			return ResolveState(null);
		}
		
		SHT2 C 1 A_Lower();
		Wait;
  
	/*SelectAnimation:
		SHTG A 0 A_StartSoundEX("misc/w_pkup", 1);
		SHT2 DCB 2;*/
	
	Ready:
		SHT2 A 1 A_WeaponReady();
		Loop;

	Fire:
		SHT2 A 0
		{
			invoker.previousangle = angle;
			invoker.previouspitch = pitch;
		}
		SHT2 A 0 A_Jump(256, "Fire1", "Fire2");
		Wait;
	Fire1:
		SHT2 A 4
		{
			A_FireBullets (12, 8, 20, 5, "Player_SuperShotgunPuff", 1, 0, "ShotgunTracer", -8);
			A_GunFlash();
			A_WeaponOffset(-3, 5, WOF_ADD);
			
			if (GetCVAR("CamRecoilToggle") == true)
				A_Overlay(2, "CamRecoil");
		}
		#### # 1 A_WeaponOffset(1, -2, WOF_ADD);
		#### # 1 A_WeaponOffset(1, -2, WOF_ADD);
		#### # 1 A_WeaponOffset(1, -1, WOF_ADD);
		#### # 1 A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		Goto Reloading;
	Fire2:
		SHT2 A 4
		{
			A_FireBullets (12, 8, 20, 5, "Player_SuperShotgunPuff", 1, 0, "ShotgunTracer", -8);
			A_GunFlash();
			A_WeaponOffset(3, 5, WOF_ADD);
			
			if (GetCVAR("CamRecoilToggle") == true)
				A_Overlay(2, "CamRecoil");
			if (GetCVAR("WeaponLight") == true)
				A_FireProjectile("SuperShotgunLight",0,0,0, -14);
		}
		#### # 1 A_WeaponOffset(-1, -2, WOF_ADD);
		#### # 1 A_WeaponOffset(-1, -2, WOF_ADD);
		#### # 1 A_WeaponOffset(-1, -1, WOF_ADD);
		#### # 1 A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		Goto Reloading;
	
	Reloading:
		SHT2 BCDDD 1;
		SHT2 E 3;
		SHT2 F 4;
		SHT2 G 5 A_CheckReload();
		SHT2 H 5 A_OpenShotgun2();
		TNT1 AA 0 A_FireProjectile("SSGCasingSpawn",random(0, 5),0,-8, frandom(-20, -15));
		SHT2 IJ 4;
		SHT2 K 6 A_LoadShotgun2();
		SHT2 LM 4;
		SHT2 NO 3;
		SHT2 P 2 A_CloseShotgun2();
		SHT2 A 0 A_ReFire();
		Goto Ready;
	
	Flash:
		TNT1 A 0
		{
			
			if(GetCVar("MuzzleStyle"))
			{
				A_OverlayFlags(1000, PSPF_RENDERSTYLE, 1);
				A_OverlayRenderStyle(1000, STYLE_Add);
				
				if(GetCVar("CV_MUZZLEOFFSET"))
				{
					A_Overlay(-999, "MuzzleOffset");
					A_Overlay(-998, "MuzzleOffset2");
					A_Overlay(-1000, "Muzzle");
					A_Overlay(-1001, "Muzzle2");
					A_OverlayFlags(-1000, PSPF_ADDWEAPON, 0);
					A_OverlayFlags(-1001, PSPF_ADDWEAPON, 0);
					A_OverlayOffset(-1000, 0, 32);
					A_OverlayOffset(-1001, 0, 32);
					A_OverlayFlags(-1000, PSPF_RENDERSTYLE, 1);
					A_OverlayRenderStyle(-1000, STYLE_Add); 
					A_OverlayFlags(-1001, PSPF_RENDERSTYLE, 1);
					A_OverlayRenderStyle(-1001, STYLE_Add);
				}
			}
			else
			{
				A_OverlayFlags(1000, PSPF_RENDERSTYLE, 0);
				A_OverlayFlags(-1000, PSPF_RENDERSTYLE, 0);
				A_OverlayFlags(-1000, PSPF_ADDWEAPON, 1);
			}
		}
		
		SHT2 Q 1 Bright
		{
			A_WeaponOffset(0, random(45, 50));
			
			if (GetCVar("WeaponLight"))
				A_AttachLight("FiringLight", DynamicLight.PointLight, "ff 2a 00", random(80,96), 64,
					DYNAMICLIGHT.LF_SPOT, (-8,0,32),0,20,50,pitch);
			else
				A_Light(1);
		}
		SHT2 R 2 Bright { if (!GetCVar("WeaponLight")) A_Light(2); }
		SHT2 R 1 Bright
		{
			A_WeaponOffset(0, random(-5, -10), WOF_ADD);
			if (GetCVar("WeaponLight"))
				A_RemoveLight("FiringLight");
			else
				A_Light(1);
		}
		SHT2 Q 2 Bright;
		TNT1 A 0 A_WeaponOffset(0, 32, WOF_INTERPOLATE);
		Goto LightDone;
	
	Muzzle:
		#### D 3 Bright;
		#### C 2 Bright;
		Stop;
	Muzzle2:
		#### D 3 Bright;
		#### C 2 Bright;
		Stop;
		
	MuzzleOffset:
		TNT1 AAAAAA 1 A_OverlayOffset(-1000,angle - invoker.previousangle - 8, 32 + (-pitch) - (-invoker.previouspitch), WOF_INTERPOLATE);
		Stop;
	MuzzleOffset2:
		TNT1 AAAAAA 1 A_OverlayOffset(-1001,angle - invoker.previousangle + 8, 32 + (-pitch) - (-invoker.previouspitch), WOF_INTERPOLATE);
		Stop;
		
	CamRecoil:
		TNT1 B 1 A_ZoomFactor(0.95, ZOOM_NOSCALETURNING);
		TNT1 A 1 A_SetPitch(pitch-4, SPF_INTERPOLATE);
		TNT1 B 1 A_ZoomFactor(0.975, ZOOM_NOSCALETURNING);
		TNT1 B 1 A_ZoomFactor(1, ZOOM_NOSCALETURNING);
		TNT1 AAAAA 1 A_SetPitch(pitch+0.5, SPF_INTERPOLATE);
		TNT1 AAAAAA 1 A_SetPitch(pitch+0.25, SPF_INTERPOLATE);
		Stop;
		
	Overlay.Aside:
		TNT1 A 0 A_OverlayFlags(3, PSPF_ADDBOB, true);
		TNT1 A 0 A_OverlayPivotAlign(3, PSPA_RIGHT, PSPA_BOTTOM);
		
		SHT2 ACC 1
		{
			A_OverlayOffset(3, -35, 5, WOF_INTERPOLATE );
			A_OverlayRotate(3, 4, WOF_ADD);
		}
		SHT2 DD 1
		{
			A_OverlayOffset(3, -30, 10, WOF_INTERPOLATE );
			A_OverlayRotate(3, 8, WOF_ADD);
		}
		SHT2 D 10;
		SHT2 DCC 1
		{
			A_OverlayOffset(3, 0, 0, WOF_INTERPOLATE );
			A_OverlayRotate(3, -8, WOF_ADD);
		}
		SHT2 A 1;
		Stop;
	
	Overlay.AirAside:
		TNT1 A 0 A_OverlayFlags(3, PSPF_ADDBOB, true);
		TNT1 A 0 A_OverlayPivotAlign(3, PSPA_RIGHT, PSPA_BOTTOM);
		
		SHT2 ACC 1
		{
			A_OverlayOffset(3, -35, 5, WOF_INTERPOLATE );
			A_OverlayRotate(3, 5, WOF_ADD);
		}
		SHT2 DD 1
		{
			A_OverlayOffset(3, -30, 10, WOF_INTERPOLATE );
			A_OverlayRotate(3, 10, WOF_ADD);
		}
		SHT2 D 8;
		SHT2 DCC 1 
		{
			A_OverlayOffset(3, 0, 0, WOF_KEEPY | WOF_INTERPOLATE );
			A_OverlayRotate(3, -10, WOF_ADD);
		}
		SHT2 A 1;
		Stop;
	}
}

Class SuperShotgunLight : Actor
{
	Default
	{
		Height 0; Radius 0;
		Speed 8; Damage 0; +NOINTERACTION +MISSILE
	}
	States
	{
	Spawn:
		TNT1 A 4;
		Stop;
	}
}