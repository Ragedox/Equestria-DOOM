Class EquestriaChaingun : EquestriaDoomWeapon replaces Chaingun
{
	Default
	{
		//$Title Chaingun
		Weapon.SelectionOrder 4;
		
		Weapon.BobStyle "InverseSmooth"; Weapon.BobRangeX 0.25; Weapon.BobSpeed 1;
		
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 20;
		Weapon.AmmoType "Clip";
		
		Inventory.PickupMessage "$GOTCHAINGUN";
		Inventory.PickupSound "pickup/chaingun";
		
		Obituary "$OB_MPCHAINGUN";
		
		Tag "$TAG_CHAINGUN";
		
		AttackSound "weapons/chaingun";
	}
	States
	{
	Spawn:
		MGUN A -1 NoDelay { bSPRITEFLIP = RandomPick(0,1); }
		Stop;
	
	Ready:
		CHGG A 1 A_WeaponReady();
		Loop;
	
	Select:
		CHGG A 0 A_SetCrossHair(11);
		CHGG A 1 A_Raise();
		Wait;
		
	Deselect:
		TNT1 A 0 {
			if(health <= 0)
				return ResolveState("DeathCheck");
			return ResolveState(null);
		}
		
		CHGG A 1 A_Lower();
		Wait;
	
	Fire:
		CHGG AB 6;
		CHGG A 5
		{
			A_FireBullets(3, 3, -1, 4, "Player_BulletPuff", 1, 0, "BulletTracer", -8);
			A_GunFlash("Flash");
			A_FireProjectile("BulletCasing",frandom(90, 45),0,0,frandom(0, -7), FPF_NOAUTOAIM);
		}
		CHGG B 5;
		CHGG A 3
		{
			A_FireBullets(3, 3, -1, 4, "Player_BulletPuff", 1, 0, "BulletTracer", -8);
			A_GunFlash("Flash");
			A_FireProjectile("BulletCasing",frandom(90, 45),0,0,frandom(0, -7), FPF_NOAUTOAIM);
		}
		CHGG B 3;
		CHGG A 0 A_Refire();
		Goto WindDown;
		
	Hold:
		CHGG A 3
		{
			if (CheckInventory("Clip", 0))
			{
				A_SetViewRoll(0, SPF_INTERPOLATE);
				return ResolveState("Deselect");
			}
			
			A_FireBullets(6, 6, -1, 4, "Player_BulletPuff", 1, 0, "BulletTracer", -8);
			A_GunFlash("Flash");
			A_FireProjectile("BulletCasing",frandom(90, 45),0,0,frandom(0, -7), FPF_NOAUTOAIM);
			
			if (GetCVar("CamRecoilToggle") == true)
			{
				A_QuakeEx(1,1,1,3,0,2,0, QF_SCALEUP | QF_SCALEDOWN/*, 1,1,1,0,0,frandom(0.5, 1),frandom(0.5, 1)*/);
				A_SetRoll(frandom(-0.5, 0.5));
			}
			return state(null);
		}
		CHGG B 3
		{
			if (CheckInventory("Clip", 0))
			{
				A_SetViewRoll(0, SPF_INTERPOLATE);
				return ResolveState("Deselect");
			}
			
			A_FireBullets(6, 6, -1, 4, "Player_BulletPuff", 1, 0, "BulletTracer", -8);
			A_GunFlash("Flash2");
			A_FireProjectile("BulletCasing",frandom(90, 45),0,0,frandom(0, -7), FPF_NOAUTOAIM);
			
			if (GetCVar("CamRecoilToggle") == true)
			{
				A_QuakeEx(1,1,1,3,0,2,0, QF_SCALEUP | QF_SCALEDOWN/*, 1,1,1,0,0,frandom(0.5, 1),frandom(0.5, 1)*/);
				A_SetRoll(frandom(-0.5, 0.5));
			}
			return state(null);
		}

		CHGG A 0
		{
			A_WeaponOffset(0, 32, WOF_KEEPX | WOF_INTERPOLATE);
			A_ReFire();
			
			A_SetViewRoll(0,SPF_INTERPOLATE);
			
			A_RemoveLight("FiringLight");
			
			if (CheckInventory("Clip", 0))
				return ResolveState("Deselect");
			
			return state(null);
		}
		Goto WindDown;
	
	WindDown:
		CHGG AB 4 { A_Refire(); A_WeaponReady(WRF_NOFIRE); }
		CHGG AB 5 { A_Refire(); A_WeaponReady(WRF_NOFIRE); }
		CHGG AB 6 { A_Refire(); A_WeaponReady(WRF_NOFIRE); }
		CHGG B 0 A_ClearRefire();
		Goto Ready;
		
	Flash:
		CHGF A 2 Bright
		{
			if(GetCVar("MuzzleStyle"))
			{ A_OverlayFlags(1000, PSPF_RENDERSTYLE, 1); A_OverlayRenderStyle(1000, STYLE_Add); }
			
			if (GetCVar("WeaponLight"))
				A_AttachLight("FiringLight", DynamicLight.PointLight, "Orange", random(80,96), 80,
					DYNAMICLIGHT.LF_SPOT, (-8,0,32),0,20,50,pitch);
			else A_Light1();
			
			A_WeaponOffset(random(-3, 3), random(36, 28), WOF_INTERPOLATE);
		}
		Goto LightDone;
	
	Flash2:
		CHGF B 2 Bright
		{
			if(GetCVar("MuzzleStyle"))
			{ A_OverlayFlags(1000, PSPF_RENDERSTYLE, 1); A_OverlayRenderStyle(1000, STYLE_Add); }
			
			if (GetCVar("WeaponLight"))
				A_AttachLight("FiringLight", DynamicLight.PointLight, "Orange", random(80,96), 80,
					DYNAMICLIGHT.LF_SPOT, (-8,0,32),0,20,50,pitch);
			else A_Light1();
			
			A_WeaponOffset(random(-3, 3), random(36, 28), WOF_INTERPOLATE);
		}
		Goto LightDone;
	
	LightDone:
		TNT1 A 0
		{
			A_Light(0);
			A_RemoveLight("FiringLight");
		}
		Stop;
	}
}