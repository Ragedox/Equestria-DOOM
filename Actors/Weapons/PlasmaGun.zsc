Class EquestriaPlasmaGun : EquestriaDoomWeapon replaces PlasmaRifle
{
	int heatcounter;
	
	Default
	{
		//$Title Plasma Gun
		Weapon.BobStyle "InverseSmooth";
		Weapon.SelectionOrder 1;
		Weapon.AmmoUse 1;
		Weapon.AmmoGive 40;
		Weapon.AmmoType "Cell";
		
		Inventory.PickupMessage "$GOTPLASMA";
		Inventory.PickupSound "pickup/plasmagun";

		Tag "$TAG_PLASMARIFLE";
	}
	States
	{
	Spawn:
		PLAS A -1 NoDelay { bSPRITEFLIP = RandomPick(0,1); }
		Stop;
		
	Ready:
		PLSG A 1 A_WeaponReady();
		Loop;
	
	Select:
		PLSG A 0 Offset(-67, 110)
		{
			A_SetCrossHair(12);
		
			if (GetCVAR("AuraToggle") == true)
				A_Overlay(10, "Aura.Select");
		}
		#### D 1 A_WeaponOffset(-54, 91, WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-32, 79, WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-22, 68, WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-10, 57, WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-7, 49, WOF_INTERPOLATE);
		#### # 1 A_WeaponOffset(-2, 44, WOF_INTERPOLATE);
		#### # 0 A_Raise();
		Wait;
		
	Deselect:
		#### # 0 A_JumpIf(health <= 0, "DeathCheck");
		PLSG A 1 A_Lower();
		Wait;
	
	Fire:
		TNT1 A 1
		{
			A_FireProjectile("EquestriaPlasmaBall", 0, 0, 0, -14);
			A_FirePlasma();
			
			invoker.heatcounter++;
		}
		TNT1 A 2;
		TNT1 A 0 A_Refire();
		TNT1 A 0
		{
			if (invoker.heatcounter >= 4)
			{
				invoker.heatcounter = 0;
				return ResolveState("Chill");
			}
			return ResolveState(null);
		}
		Goto Ready;

	Chill:
		PLSG D 1
		{
			if (GetCVAR("AuraToggle") == true)
				A_Overlay(10, "Aura.Chill");
			else
				A_ClearOverlays(10, 11);
		}
		PLSG EFG 1;
		PLSG H 12;
		PLSG GFED 1;
		Goto Ready;
	
	Flash:
		PLSF A 3 Bright
		{
			A_Overlay(999, "Weapon1");
			A_WeaponOffset(0, 40, WOF_KEEPX | WOF_INTERPOLATE);
			A_Light(1);
			
			if(GetCVar("MuzzleStyle"))
			{ A_OverlayFlags(1000, PSPF_RENDERSTYLE, 1); A_OverlayRenderStyle(1000, STYLE_Add); }
		}
		Goto LightDone;
		PLSF B 3 Bright
		{
			A_Overlay(999, "Weapon2");
			A_WeaponOffset(0, 35, WOF_KEEPX | WOF_INTERPOLATE);
			A_Light(2);
			
			if(GetCVar("MuzzleStyle"))
			{ A_OverlayFlags(1000, PSPF_RENDERSTYLE, 1); A_OverlayRenderStyle(1000, STYLE_Add); }
		}
		//I Don't know how i make a smooth animation with the original Doom Sprites
		Goto LightDone;
	
	Weapon1:
		PLSG B 3;
		Stop;
	Weapon2:
		PLSG C 3;
		Stop;
		
	Overlay.Aside:
		TNT1 A 0 { A_OverlayFlags(3, PSPF_ADDBOB, true); A_OverlayPivotAlign(3, PSPA_RIGHT, PSPA_BOTTOM); }
		
		PLSG AFF 1
		{
			A_OverlayOffset(3, -35, 5, WOF_INTERPOLATE );
			A_OverlayRotate(3, 4, WOF_ADD);
		}
		PLSG FF 1
		{
			A_OverlayOffset(3, -30, 10, WOF_INTERPOLATE );
			A_OverlayRotate(3, 8, WOF_ADD);
		}
		PLSG F 10;
		PLSG FFF 1 
		{
			A_OverlayOffset(3, 0, 0, WOF_INTERPOLATE );
			A_OverlayRotate(3, -8, WOF_ADD);
		}
		PLSG A 1;
		Stop;
	
	Overlay.AirAside:
		TNT1 A 0 { A_OverlayFlags(3, PSPF_ADDBOB, true); A_OverlayPivotAlign(3, PSPA_RIGHT, PSPA_BOTTOM); }
		
		PLSG AFF 1
		{
			A_OverlayOffset(3, -35, 5, WOF_INTERPOLATE );
			A_OverlayRotate(3, 5, WOF_ADD);
		}
		PLSG FF 1
		{
			A_OverlayOffset(3, -30, 10, WOF_INTERPOLATE );
			A_OverlayRotate(3, 10, WOF_ADD);
		}
		PLSG F 8;
		PLSG FFF 1 
		{
			A_OverlayOffset(3, 0, 0, WOF_KEEPY | WOF_INTERPOLATE );
			A_OverlayRotate(3, -10, WOF_ADD);
		}
		PLSG A 1;
		Stop;
	
	Aura.Select:
		AUR3 A 0 A_Overlay(11, "Aura.Setup");
		AUR3 BBB 2 Bright;
		Stop;
		
	Aura.Chill:
		AUR3 A 0 A_Overlay(11, "Aura.Setup");
		
		AUR3 A 1 Bright		A_OverlayScale(10,1,1, WOF_INTERPOLATE);
		AUR3 BCD 1 Bright	A_OverlayScale(10,1,1, WOF_INTERPOLATE);
		AUR3 E 12 Bright	A_OverlayScale(10,1,1, WOF_INTERPOLATE);
		AUR3 DCBA 1 Bright	A_OverlayScale(10,1,1, WOF_INTERPOLATE);
		Stop;
	}
}

/*extend Class EquestriaDoomWeapon
{
	action void A_FirePlasma2(string missile, double xmissile, double ymissile, double zmissile)
	{
		if (player == null)
		{
			return;
		}
		Weapon weap = player.ReadyWeapon;
		if (weap != null && invoker == weap && stateinfo != null && stateinfo.mStateType == STATE_Psprite)
		{
			if (!weap.DepleteAmmo (weap.bAltFire, true, 1))
				return;
			
			State flash = weap.FindState('Flash');
			if (flash != null)
			{
				player.SetSafeFlash(weap, flash, random[FirePlasma](0, 1));
			}
			
		}
		
		SpawnPlayerMissile (missile, 1e37, xmissile,ymissile,zmissile);
	}
}*/
		
Class EquestriaPlasmaBall : Actor
{
	Default
	{
		Projectile;
		
		Decal "PlasmaScorch";
		
		Speed 25;
		
		Damage 5;
		DamageType "Plasma";
		
		Radius 6; Height 12;
	  
		RenderStyle "Add"; Alpha 1;
		
		+RollSprite +RollCenter
		+ForceXYBillBoard
		+ZDoomTrans
		+Bright
		
		SeeSound "weapons/plasmaf";
		DeathSound "weapons/plasmax";
		Obituary "$OB_MPPLASMARIFLE";
		
		Scale 0.8;
	}
	States
	{
	Spawn:
		BAL4 A 0 NoDelay
		{
			A_SpawnProjectile("PlasmaSparkle", 0, 0, random (0, 359), CMF_AIMDIRECTION, random (0, 359));
			A_SetRoll(random(0, 359));
			bSPRITEFLIP = RandomPick(0,1);
		}
		
		BAL4 CDCDCD 1 A_SetRoll((roll + 15), SPF_INTERPOLATE);
	Projectile:
		BAL4 CD 1
		{
			A_SpawnItemEx("PlasmaTrail");
			A_SetRoll((roll + 15), SPF_INTERPOLATE);
		}
		Loop;

	//XDeath:
		//PLSE AB 0 A_SpawnItemEx("NoBlood_TinyGenericGib",0,0,0,random(1, 2),random(1, 2),random(1, 2),frandom(0, 359),0, 128);
	Crash:
	Death:
		PLSE C 0
		{
			A_FadeIn(0.5, FTF_CLAMP);
			A_SpawnItem("SmokePuff");
		}
		PLSE DE 0 A_SpawnProjectile("PlasmaSparkle", 0, 0, random (0, 359), CMF_AIMDIRECTION, random (0, 359));
		PLSE ABC 4;
		PLSE DDDDEEEE 1 A_FadeOut(0.025);
		Stop;
	}
}

Class PlasmaTrail : Equestria_Trails
{
	Default { Scale 0.8; Alpha 0.7; RenderStyle "Add"; }
	States
	{
	Spawn:
		TNT1 A 2 NoDelay { A_SetRoll(random(0, 359)); bSPRITEFLIP = RandomPick(0,1); }

		BAL4 C 1 Bright A_FadeOut(0.1);
		Wait;
	}
}

Class PlasmaSparkle : PuffSparkles
{
	Default
	{
		RenderStyle "Add"; Alpha 0.5;
		Scale 0.5;
		Speed 4;
		Gravity 0.1;
	}
	States
	{
	Spawn:
		PLS2 A 0 NoDelay A_SetRoll(random(0, 359));
		
		PLS2 A random(15,25);
	Death:
		PLS2 AAAA 1 A_SetScale(Scale.X + 0.25, Scale.Y + 0.25);
		PLS2 AAAA 1 A_SetScale(Scale.X - 0.25, Scale.Y - 0.25);
		Stop;
	}
	Override void Tick()
	{
		Super.Tick();
		if (!isFrozen())
		{
			A_ScaleVelocity(0.90);
			A_Recoil(frandom(-1, 1));
		}	
	}
}

Class PlasmaExplosion : Equus_BFGExtra
{
	Default
	{
		+ForceXYBillBoard +NoInteraction +Bright
		RenderStyle "Add"; Translation "112:127=199:192", "224:231=192:196", "160:167=199:192";
	}
}

Class DummyPlasma : Actor replaces PlasmaBall
{
	Default
	{
		Speed 0; Damage 0; +NOINTERACTION
	}
	States
	{
	Spawn:
		TNT1 A 0;
		Stop;
	}
}