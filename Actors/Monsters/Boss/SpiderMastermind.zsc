Class EquestriaSpiderMastermind : DoomEquestriaMonster replaces SpiderMastermind
{
	Default
	{
	//$Title Spider Mastermind
		Tag "$FN_SPIDER"; Obituary "$OB_SPIDER";
		
		Health 3000;
		
		Height 150; Radius 128;
		Speed 14;
		Scale 1.5;
		
		Mass 1000;
		
		PainThreshold 5;
		PainChance 40;
		PainChance "EquestriaBFGBall", 256; PainChance "EquestriaBFGSplash", 32;
		DamageFactor "BFGSplash", 0.25;
		
		+BOSS +E3M8BOSS +E4M8BOSS
		+MISSILEMORE
		+FLOORCLIP
		+NORADIUSDMG
		+DONTMORPH
		+BOSSDEATH
		-AVOIDMELEE
		-SHOOTABLE
		+NONSHOOTABLE
		+VULNERABLE
		
		SeeSound "spider/sight";
		AttackSound "spider/attack";
		PainSound "spider/pain";
		DeathSound "spider/death";
		ActiveSound "spider/active";
	}
	
	override void PostBeginPlay()
	{
		A_SpawnItemEx("Equestria_MastermindHitbox",0,0,0,0,0,0,0,SXF_SETMASTER | SXF_NOCHECKPOSITION);
	}
	override bool CanCollideWith(actor other, bool passive)
	{
		return !(other is "PlayerPawn");
	}
   
	States
	{
	Spawn:
		SPID AB 10 A_Look();
		Loop;
		
	See:
		SPID A 3 A_Metal();
		SPID ABB 3 A_Chase();
		SPID C 3 A_Metal();
		SPID CDD 3 A_Chase();
		SPID E 3 A_Metal();
		SPID EFF 3 A_Chase();
		Loop;
		
	Missile:
		SPID A 20 Bright A_FaceTarget(90, 270, 0, FAF_MIDDLE);
		SPID GH 3 Bright
		{
			A_FaceTarget(90, 270, 0, FAF_MIDDLE);
			A_CustomBulletAttack(30, 25, 4, random(1,5)*2, "Equestria_MastermindPuff", 0, CBAF_NORANDOM, AAPTR_TARGET, "ShotgunTracer");
		}
		SPID H 1 A_SpidRefire();
		Goto Missile+1;
	
	Pain:
		SPID I 3;
		SPID I 3 A_Pain();
		Goto See;
		
	/*Pain.BFGball:
	Pain.BFGSplash:
		#### ACBEDEFBACB 1 A_SpawnProjectile("BFGSparkles", 0, 0, random (0, 359), CMF_AIMDIRECTION, random (0, 359));
		SPID D 8 A_Pain();
		#### ACBEDEFBACB 1 A_SpawnProjectile("BFGSparkles", 0, 0, random (0, 359), CMF_AIMDIRECTION, random (0, 359));
		#### BACEDEFBAFB 1 A_SpawnProjectile("BFGSparkles", 0, 0, random (0, 359), CMF_AIMDIRECTION, random (0, 359));
		SPID B 8 A_Pain();
		#### BACEBDBACFB 1 A_SpawnProjectile("BFGSparkles", 0, 0, random (0, 359), CMF_AIMDIRECTION, random (0, 359));
		#### BCABEDCEFBA 1 A_SpawnProjectile("BFGSparkles", 0, 0, random (0, 359), CMF_AIMDIRECTION, random (0, 359));
		SPID A 8 A_Pain();
		#### BACABDEFBAC 1 A_SpawnProjectile("BFGSparkles", 0, 0, random (0, 359), CMF_AIMDIRECTION, random (0, 359));
		Goto See;*/
	
	XDeath:
	Death:
		SPID J 20 A_Scream();
		SPID K 10 A_NoBlocking();
		SPID LMN 8
		{
			for (int i = 0; i < 16; i++)
			{
				A_SpawnItemEx("BigGoreRandom", frandom(-50, 50), frandom(-50, 50), frandom(32, 110),
					frandom(2,8),frandom(2,8),frandom(4,16),
					frandom(0, 360), SXF_USEBLOODCOLOR);
				A_SpawnItemEx("GenericGib", frandom(-50, 50), frandom(-50, 50), frandom(32, 110),
					frandom(8,16),frandom(8,16),frandom(8,24), 
					frandom(0, 360), SXF_USEBLOODCOLOR);
				A_SpawnItemEx("TinyGenericGib", frandom(-50, 50), frandom(-50, 50), frandom(32, 110),
					frandom(8,16),frandom(8,16),frandom(8,24), 
					frandom(0, 360), SXF_USEBLOODCOLOR);
			}
			A_SpawnItemEx("BloodExplosionSphere",0,0,random(0, 16),0,0,0,0, SXF_TRANSFERPOINTERS);
		}
		SPID O 10
		{
			A_SpawnItemEx("Equestria_BloodExplosion", Frandom(-50, 50), Frandom(-50, 50), frandom(32, 110));
			for (int i = 0; i < 16; i++)
			{
				A_SpawnItemEx("BigGoreRandom", frandom(-50, 50), frandom(-50, 50), frandom(32, 110),
					frandom(2,8),frandom(2,8),frandom(4,16),
					frandom(0, 360), SXF_USEBLOODCOLOR);
				A_SpawnItemEx("GenericGib", frandom(-50, 50), frandom(-50, 50), frandom(32, 110),
					frandom(8,16),frandom(8,16),frandom(8,24), 
					frandom(0, 360), SXF_USEBLOODCOLOR);
				A_SpawnItemEx("TinyGenericGib", frandom(-50, 50), frandom(-50, 50), frandom(32, 110),
					frandom(8,16),frandom(8,16),frandom(8,24), 
					frandom(0, 360), SXF_USEBLOODCOLOR);
			}
		}
		SPID PQR 5;
		SPID S 30;
		SPID S -1 A_BossDeath();
		Stop;
	}
}

Class Equestria_MastermindPuff : ShotgunPuff
{
	Default
	{
		+ALLOWTHRUFLAGS
		+ALLOWTHRUBITS
        ThruBits 1;
	}
}

Class Equestria_MastermindHitbox : Actor
{
	Default
	{
		Health 	0x7FFFFFFF;
		Mass 	0x7FFFFFFF;
		Radius 50; Height 100;
		
		PainThreshold 5;
		PainChance 40;
		PainChance "EquestriaBFGBall", 128; PainChance "EquestriaBFGSplash", 32;
		DamageFactor "BFGSplash", 0.25;
		
		BloodType "Equestria_BloodEnemies", "Equestria_BloodSplatter", "EquestriaBloodAxe";
		
		ThruBits 1;
		+SHOOTABLE
		+NODAMAGETHRUST 
		+NORADIUSDMG 
		+NOGRAVITY
		+NEVERTARGET
		+MTHRUSPECIES
		+THRUSPECIES
		+CAUSEPAIN
		+INVISIBLE
		+SOLID
	}
	int lastHealth;
	double hsfactor;
	
	override void BeginPlay() 
	{
		self.lastHealth = self.health;
		super.BeginPlay();
	}	
		
	override void Tick()
	{
		if(!master || master.health < 1)
			Destroy();
			
		Super.Tick();
								
		A_Warp(AAPTR_MASTER,0,0,50,0,WARPF_INTERPOLATE|WARPF_COPYINTERPOLATION|WARPF_NOCHECKPOSITION);
		
		if(self.health < self.lastHealth)
			A_DamageMaster(int(self.lastHealth - self.Health),"None", DMSS_INFLICTORDMGTYPE ); self.lasthealth = self.health;
	}
	
	override bool CanCollideWith(actor other, bool passive)
	{
		// if an incoming projectile is from the Hitbox's master, ignore it.
 		if((other.target && (other.target == master)) || (other == master))
			return false;
			
		return super.CanCollideWith(other, passive);
	}
	
	States
	{
		Spawn:
			AMRK A 1;
			loop;
		Death:
			TNT1 A 1;
			stop;
	}
}