Class LostSoulVariants : RandomSpawner replaces LostSoul
{
	Default
	{
		//$Title Lost Soul
		//$Sprite SKULA1
		DropItem "EquestriaLostSoul";
		DropItem "UnicornSoul";
		DropItem "NirikSoul";
	}
}

/*
To Do

				Kirins/Niriks more agressive
				Unicorns more faster but weaker (Alpha Doom skull)
				Normal Pony the normal Lost Soul

*/

Class LostSoulGib : DebrisCore
{
	Default
	{
		Height 2; Radius 1;
		Gravity 0.5;
		Speed 8;
		DebrisCore.RollSpeed 25;
		BounceType "Doom"; BounceFactor 0.25;
		Mass 2;
	}
	States
	{
	Spawn:
		GIB2 ABC 0 { bSPRITEFLIP = RandomPick(0,1); A_SetRoll(random(0, 359)); A_SetScale(frandom(0.5, 1)); }
		GIB2 # 0 A_Jump(256, 1,2,3);
		Wait;
		
		GIB2 A 0;
		Goto Roll;
		GIB2 B 0;
		Goto Roll;
		GIB2 C 0;
		Goto Roll;
		
	Bounce:
		#### # 0 A_SetRoll(roll + random(-100, 100));
	Roll:
		#### # 1;
		Loop;
	
	Death:
	Crash:
		#### # 350;
		#### # 0 A_JumpIf(GetCVar("GibsStayForever") == 0, "FadeOut");
		#### # 0; //A_JumpIf(GetCVar("GibsStayForever") == 2, "CheckSight");
		Loop;
		
	FadeOut:
		#### # 1 A_FadeOut(0.1);
		Wait;
	
	CheckSight:
		#### # 35 A_CheckSight("FadeOut");
		Loop;
	
	Bye: TNT1 A 0;
		Stop;
	}
}

Class EquestriaLostSoul : DoomEquestriaMonster
{
	Default
	{
		//$Title Lost Soul
		Tag "$FN_LOST"; Obituary "$OB_SKULL";
	
		Health 50;
		
		Speed 10 / 6;
		
		Height 30; Radius 15;
		DeathHeight 30;
		
		PainChance 256; PainThreshold 0;
		Damage 3; DamageFactor "Plasma", 1.75;
		
		Mass 50;
		RenderStyle "Normal";
		
		+FORCEXYBILLBOARD
		+FLOATBOB
		-COUNTKILL
		+NOBLOOD
		+Bright
		-AVOIDMELEE
		+FLOAT +NOGRAVITY
		+MISSILEMORE +DONTFALL
		+NOICEDEATH +ZDOOMTRANS +RETARGETAFTERSLAM
		-AVOIDMELEE
		
		AttackSound "skull/melee";
		PainSound "skull/pain";
		DeathSound "skull/death";
		ActiveSound "skull/active";
		RenderStyle "SoulTrans";
		
		EquestriaLostSoul.SpawnTrail true;
	}
	
	bool bTrail;
	property SpawnTrail : bTrail;
	
	override void BeginPlay()
	{
		int lostsoulspecie;
		
		lostsoulspecie = random(0,1);
		
		if (GetCVar("CV_HUMANSOUL") && lostsoulspecie == 1)
			sprite = getspriteindex("LSO4");

		Super.BeginPlay();
	}
	
	override void Tick() 
	{
		Super.Tick();
		
		if (isFrozen() || !target || !bTrail)
            return;

		A_SpawnProjectile("LostSoulFire", random(15, 30), 0, random(0, 360), 2, random(0, 360));
	}
	
	States
	{
	
	Spawn:
		LSOL A 10 A_Look();
		Loop;
		
	See:
		LSOL A 1 A_Chase();
		LSOL AAAAA 1 A_Chase(null,null);
		Loop;
	
	Missile:
		SKUL C 10 A_FaceTarget();
		SKUL D 4
		{
			A_SkullAttack();
			A_SpawnItem("LostSoulCharge", 0, height / 2);
		}
		SKUL CD 4 A_SpawnItemEx("EQ_FireBallTrail", 0,0,15,0,0,0,0, SXF_TRANSFERSCALE);
		Goto Missile+2;
	
	Pain:
		SKUL E 3 BRIGHT;
		SKUL E 3 BRIGHT A_Pain();
		Goto See;
		
	Death:
		"####" "#" 0 { bSPRITEFLIP = randompick(0, 1); }
		
		SKUL F 6;
		SKUL G 6 A_Scream();
	XDeath:
	Death.Berserk:
		SKUL H 6;
		SKUL I 4
		{
			A_NoBlocking();
			
			for (int i = 0; i < 25; i++)
			{
				A_SpawnProjectile("LostSoulGib", random(0, 30), random(radius * -1, radius), frandom(0, 360), CMF_AIMDIRECTION, frandom(0, 360));
			}
		}
		SKUL J 3;
		SKUL K 1 A_FadeOut(0.1);
		Wait;
	}
}

Class UnicornSoul : EquestriaLostSoul
{
	Default
	{
		Tag "$FN_UNICORNSOUL";
		Speed 8 / 6 ;
		-Bright +MISSILEMORE
		DamageType "Unicorn";
		EquestriaLostSoul.SpawnTrail false;
	}
	States
	{
	
	Spawn:
		SKU2 A 10 A_Look();
		Loop;
		
	See:
	//	#### # 0 A_JumpIfCloser(128, "Charge");
		SKU2 A 1 A_Chase();
		SKU2 AAAAA 1 A_Chase(null,null);
		Loop;
	
	Charge:
		SKU2 BC 5 A_FaceTarget();
		SKU2 D 0
		{
			A_SpawnItem("LostSoulCharge", 0, 15);
			A_FaceTarget();
		}
		SKU2 D 4 A_SkullAttack();
		SKU2 CD 4 A_SpawnItemEx("EQ_FireBallTrail", 0,0,15,0,0,0,0, SXF_TRANSFERSCALE);
		Goto Charge+3;
	
	Missile:
		SKU2 BC 4 Bright A_FaceTarget();
		SKU2 D 8 Bright
		{
			A_FaceTarget(0,0,0,0,FAF_MIDDLE);
			A_SpawnProjectile("StonedAura", 28);
			A_Recoil(5);
		}
		#### # 0 A_Stop();
		Goto See;
	Pain:
		SKU2 E 3 BRIGHT;
		SKU2 E 3 BRIGHT A_Pain();
		Goto See;
	Death:
		"####" "#" 0 { bSPRITEFLIP = randompick(0, 1); }
		
		SKU2 F 6 Bright;
		SKU2 G 6 Bright A_Scream();
	XDeath:
	Death.Berserk:	
		SKU2 H 6 Bright;
		SKU2 I 4
		{
			A_NoBlocking();
			
			for (int i = 0; i < 25; i++)
			{
				A_SpawnProjectile("LostSoulGib", random(0, 30), random(radius * -1, radius), frandom(0, 360), CMF_AIMDIRECTION, frandom(0, 360));
			}
		}
		SKU2 J 3;
		SKU2 K 1 A_FadeOut(0.1);
		Wait;
	}
}

Class StonedAura : FastProjectile
{
	Default
	{
		+RANDOMIZE
		+SEEKERMISSILE
		+SCREENSEEKER
		
		Damage 3;
		
		Speed 50;
		
		Radius 7; Height 14;
		
		ProjectileKickBack 128;
		DamageType "Unicorn";
		RenderStyle "Add";
		SeeSound "misc/magic";
		DeathSound "weapons/plasmax";
	}
	States
	{
	Spawn:
		BAL3 AAAAAAABBBBBBB 1 Bright
		{
			A_SpawnItemEx("StonedAuraTrail", 0,0,0,0,0,0,0, SXF_TRANSFERSPRITEFRAME);
			A_SeekerMissile(0, 2, SMF_PRECISE);
		}
		Loop;
	Death:
		BAL3 C 0 A_SetRenderStyle(1, STYLE_Normal);
		BAL3 CDE 4 Bright;
		#### # 1 A_FadeOut(0.1);
		Wait;
	}
}

Class StonedAuraTrail : PlasmaTrail
{
	States
	{
	Spawn:
		#### # 0 A_SetRoll(random(0, 359));
		#### # 1 Bright A_FadeOut(0.1);
		Wait;
	}
}

Class NirikSoul : EquestriaLostSoul	
{
	Default
	{
		PainChance 32; Tag "$FN_KIRINSOUL"; Speed 12 / 6; Health 75; Damage 5; +MISSILEEVENMORE
	}
	States
	{
	
	Spawn:
		SKUL AB 10 A_Look();
		Loop;
		
	See:
		#### A 1 A_Chase();
		#### A 1 A_Chase(null,null);
		Loop;
	
	Missile:
		SKUL C 10 A_FaceTarget();
		SKUL D 4
		{
			A_SkullAttack(30);
			A_SpawnItem("LostSoulCharge", 0, 15);
		}
		SKUL CCDD 1 A_SpawnItemEx("EQ_FireBallTrail", 0,0,15,0,0,0,0, SXF_TRANSFERSCALE);
		Goto Missile+2;
	
	Death:
	Death.Berserk:
	XDeath:
		"####" "#" 0 { bSPRITEFLIP = randompick(0, 1); }
		
		SKUL F 3;
		SKUL G 3 A_Scream();
		SKUL H 3 A_Explode(6, 128, XF_NOTMISSILE);
		SKUL I 6
		{
			A_NoBlocking();
			
			for (int i = 0; i < 25; i++)
			{
				A_SpawnProjectile("LostSoulGib", random(0, 30), random(radius * -1, radius), frandom(0, 360), CMF_AIMDIRECTION, frandom(0, 360));
			}
		}
		SKUL J 6;
		SKUL K 1 A_FadeOut(0.1);
		Wait;
	}
}

Class MissileNirikSoul : FastProjectile
{
	Default
	{
		Projectile;
		
		Health 50;
		
		Speed 20; FastSpeed 25;
		
		RenderStyle "Normal";
		
		Height 30; Radius 15;
		
		Damage 5;
		DamageFactor "Plasma", 1.75;
		
		+SHOOTABLE
		-NOBLOCKMAP
		+CASTSPRITESHADOW
		+FORCEXYBILLBOARD
		-COUNTKILL
		+NOBLOOD
		+Bright
		
		AttackSound "skull/melee";
		PainSound "skull/pain";
		DeathSound "skull/death";
		ActiveSound "skull/melee";
	}
	States
	{
	Spawn:
		SKUL CD 4 A_SpawnItemEx("EQ_FireBallTrail", 0,0,15,0,0,0,0, SXF_TRANSFERSCALE);
		Loop;
	
	Death:
		"####" "#" 0 { bSPRITEFLIP = randompick(0, 1); }
		
		SKUL F 3 A_Explode(6, 128, XF_NOTMISSILE);
		SKUL G 3 A_Scream();
		SKUL H 3;
		SKUL I 3
		{
			A_NoBlocking();
			for (int i = 0; i < 25; i++)
			{
				A_SpawnProjectile("LostSoulGib", 15, frandom(0, 360), CMF_AIMDIRECTION, frandom(0, 360));
			}
		}
		SKUL J 3;
		SKUL K 1 A_FadeOut(0.1);
		Wait;
	
	/*Death.Shotgun:
	Death.Kick:
	Death.Berserk:
	Pain.Shotgun:
		SKUL A 0 A_SpawnProjectile("MissileNirikSoul",15,0,angle * -1,CMF_AIMDIRECTION, pitch * -1);
		Stop;*/
	}
}

Class LostSoulFire : Equestria_Trails
{
	Default
	{
		Speed 1;
		Scale 1.0;
		Gravity 0.25;
	}
	States
	{
	Spawn:
		LSOF ABCDCBA random(8, 16) A_FadeOut(0.25);
		Loop;
	}
}

Class LostSoulCharge : Equestria_Trails
{
	Default { +ZDOOMTRANS }
	States
	{
	Spawn:
		MISL B random(5, 8) Bright A_QuakeEx(4, 4, 4, 8, 0, 175, "", QF_SCALEDOWN, 0,0,0, 1);
		MISL C 5 Bright;
		MISL D 1 Bright A_FadeOut(0.1);
		Stop;
	}
}

Class UnicornTrail : LostSoulCharge
{
	Default { Scale 0.75; }
	States
	{
	Spawn:
		MISL B 15 Bright;
		
	Bye:
		#### # 1 Bright A_SetScale(Scale.X - 0.01);
		#### # 0 A_JumpIf(Scale.X <= 0, "Null");
		Loop;
	}
}
		
/*actor DELostSoul : LostSoul replaces LostSoul
{
  +FLOATBOB
  -COUNTKILL
  States
  {
  Spawn:
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
	SKUL AB 10 Bright A_Look
	Loop
  See:
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
	SKUL AB 6 Bright A_Chase
    Loop
  Missile:
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
	SKUL C 10 Bright A_FaceTarget
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
	SKUL D 4 Bright A_SkullAttack
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
	SKUL CD 4 Bright
    Goto Missile+2
  Pain:
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
    SKUL E 3 Bright
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
    SKUL E 3 Bright A_Pain
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
	TNT1 A 0 A_SpawnItemEx("FirePieces",random(10,14),random(-6,6),random(-6,6),random(1,0),0,0,180,0)
    Goto See
  Death:
    SKUL F 6 Bright
    SKUL G 6 Bright A_Scream
    SKUL H 6 Bright
    SKUL I 6 Bright A_NoBlocking
    SKUL J 6
    SKUL K 6
    Stop
  }
}*/
