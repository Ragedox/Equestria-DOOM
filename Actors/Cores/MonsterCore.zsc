Class DoomEquestriaMonster : Actor abstract
{
	Default
	{
		Monster;
		
		PainThreshold 5;
		
		+CastSpriteShadow
		+AvoidMelee
		
		BloodType "Equestria_BloodEnemies", "Equestria_BloodSplatter", "EquestriaBloodAxe";
	}
		
	double OriginalHeight, OriginalRadius;
	
	override void PostBeginPlay()
	{
		OriginalHeight = height;
		OriginalRadius = radius * 2;
	}
	
	/*override void Tick()
	{
		Super.Tick();
		if(health <= woundhealth && health > 0 && bCORPSE == false)
			sprite = getspriteindex("SPOS");
	}*/
	
	/*void A_SmartChase()
	{
		if (CheckSight(target)== true)
		{
			A_Chase();
			if (GetCVar("DEBUG"))
				A_PrintBold("I see you!");
		}
		else
		{
			A_Wander();
			if (GetCVar("DEBUG"))
				A_PrintBold("Where are you!");
		}
	}*/
			
	States
	{
	XDeath:
	Crash.Berserk:
		#### # 0 //Simple Gibs
		{
			bSPRITEFLIP = randompick(0, 1);
			A_NoBlocking(); A_XScream(); A_SetRoll(0);
			
			if(GetCVar("GoreToggle") == 1)
			{
				int gorequantity;
				gorequantity = random(8, 16);
				
				for (int i = 0; i < gorequantity; i++)
					A_SpawnItemEx("GenericGib",
						FRandom((-OriginalRadius), OriginalRadius), FRandom((-OriginalRadius), OriginalRadius), frandom(OriginalHeight/3, OriginalHeight),
						frandom(2,4), frandom(2,4), frandom(4,8),
						frandom(0, 360), SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_NOCHECKPOSITION);
				
				for (int i = 0; i < gorequantity; i++)
					A_SpawnItemEx("TinyGenericGib",
						FRandom((-OriginalRadius), OriginalRadius), FRandom((-OriginalRadius), OriginalRadius), frandom(OriginalHeight/3, OriginalHeight),
						frandom(2,4), frandom(2,4), frandom(4,8),
						frandom(0, 360), SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_NOCHECKPOSITION);

				for (int i = 0; i < gorequantity; i++)
				{
					A_SpawnItemEx("Equestria_TinyBlood",
						frandom((-OriginalRadius), OriginalRadius),frandom((-OriginalRadius), OriginalRadius),frandom(OriginalHeight/3, OriginalHeight),
						frandom(0, 4),frandom(0, 4),frandom(0, 8),frandom(0,360),
						SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_NOCHECKPOSITION);
					
					A_SpawnItemEx("Equestria_SmallBlood",
						frandom((-OriginalRadius), OriginalRadius),frandom((-OriginalRadius), OriginalRadius),frandom(OriginalHeight/3, OriginalHeight),
						frandom(0, 4),frandom(0, 4),frandom(0, 8),frandom(0,360),
						SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_NOCHECKPOSITION);
					
					A_SpawnItemEx("Equestria_Blood",
						frandom((-OriginalRadius), OriginalRadius),frandom((-OriginalRadius), OriginalRadius),frandom(OriginalHeight/3, OriginalHeight),
						frandom(1, 2),frandom(1, 2),frandom(0, 8),frandom(0,360),
						SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_NOCHECKPOSITION);
				}
				
				for (int i = 0; i < 4; i++)
				{
					A_SpawnItemEx("Equestria_SmallBlood",
						frandom((-OriginalRadius), OriginalRadius),frandom((-OriginalRadius), OriginalRadius),frandom(OriginalHeight/3, OriginalHeight),
						frandom(0, 1),frandom(0, 1),frandom(0, 2),frandom(0,360),
						SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_NOCHECKPOSITION);
					
					A_SpawnItemEx("Equestria_Blood",
						frandom((-OriginalRadius), OriginalRadius),frandom((-OriginalRadius), OriginalRadius),frandom(OriginalHeight/3, OriginalHeight),
						frandom(0, 1),frandom(0, 1),frandom(0, 2),frandom(0,360),
						SXF_USEBLOODCOLOR | SXF_TRANSFERTRANSLATION | SXF_ABSOLUTEPOSITION | SXF_NOCHECKPOSITION);
				}
				
				return ResolveState("Classic.XDeath");
			}
			
			if(GetCVar("GoreToggle") == 2)
				return ResolveState("Real.XDeath");
				
			return ResolveState("Classic.XDeath");
		}
		Wait;
	}
}