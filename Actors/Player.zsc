Class Death_Common : InvToken {}
Class Death_Fire : InvToken {}
Class Death_Explosion : InvToken {}
Class Death_Nukage : InvToken {}
Class Death_Lava : InvToken {}
Class Death_Extreme : InvToken {}

Class EquestriaDoomPlayer : DoomPlayer replaces DoomPlayer
{
	int deathtype;
	
	Default
	{
		+CASTSPRITESHADOW
		+NOSKIN
		
		Player.DamageScreenColor "Red", 0.0;
		
		Player.ViewHeight 47; Player.AttackZOffset 19;
		
		Player.DisplayName "$MAINCHARACTER";
		
		Player.DamageScreenColor "Red";
		
		Player.StartItem "EquestriaPistol";
		Player.StartItem "Clip", 20;
		//Player.StartItem "Fist";
	  
		Player.WeaponSlot 1, "EquestriaChainsaw", "BerserkFist";
		Player.WeaponSlot 2, "EquestriaPistol";
		Player.WeaponSlot 3, "EquestriaShotgun", "EquestriaSuperShotgun";
		Player.WeaponSlot 4, "EquestriaRifle", "EquestriaChaingun";
		Player.WeaponSlot 5, "EquestriaRocketLauncher";
		Player.WeaponSlot 6, "EquestriaPlasmaGun";
		Player.WeaponSlot 7, "EquestriaBFG9K";
		
		/*Player.WeaponSlot 1, "EquestriaChainsaw", "BerserkFist";
		Player.WeaponSlot 2, "EquestriaPistol";
		Player.WeaponSlot 3, "EquestriaShotgun";
		Player.WeaponSlot 4, "EquestriaSuperShotgun";
		Player.WeaponSlot 5, "EquestriaRifle";
		Player.WeaponSlot 6, "EquestriaChaingun";
		Player.WeaponSlot 7, "EquestriaRocketLauncher";
		Player.WeaponSlot 8, "EquestriaPlasmaGun";
		Player.WeaponSlot 9, "EquestriaBFG9K";*/
	}
	States
	{
	
	Pain:
		PLAY G 4
		{
			if(health <= 50)
				A_QuakeEx(1,1,1,8,0,1,0,QF_RELATIVE | QF_SCALEDOWN);
			if(health > 50)
				A_QuakeEx(2,2,2,4,0,1,0,QF_RELATIVE | QF_SCALEDOWN);
		}
		PLAY G 4 A_Pain();
		Goto Spawn;
	
	Death:
		PLAY H 10;
		PLAY I 10 A_PlayerScream();
		PLAY J 10 A_NoBlocking();
		PLAY KLM 10;
		PLAY N -1;
		Stop;
		
	Death.Fire:
		TNT1 A 0 A_GiveInventory("Death_Fire", 1);
		Goto Death;
		
	Death.Nukage:
		TNT1 A 0 A_GiveInventory("Death_Nukage", 1);
		Goto Death;
	
	Death.Lava:
		TNT1 A 0 A_GiveInventory("Death_Lava", 1);
		Goto Death;
	
	Death.Explosion:
		PLAY H 10 A_GiveInventory("Death_Explosion", 1);
		PLAY I 10 A_PlayerScream();
		PLAY J 10 A_NoBlocking();
		PLAY KLM 10;
		PLAY N -1;
		Stop;
	
	XDeath:
		PLAY O 5
		{
			A_GiveInventory("Death_Extreme", 1);
			A_SkullPop("PopSkull");
			A_SpawnItemEx("XDeathGibber",0,0,16,0,0,0,0, SXF_TRANSFERPOINTERS);
			A_SpawnItemEx("BloodExplosionSphere",0,0,16,0,0,0,0, SXF_TRANSFERPOINTERS);
			A_XScream();
			A_NoBlocking();
		}
		PLAY P 5;
		PLAY Q 5;
		PLAY RSTUV 5;
		PLAY W -1;
		Stop;
		
	Death.BruisersMelee:
		PLAY O 5 A_SkullPop("PopSkull");
		PLAY P 5 A_XScream();
		PLAY R 5 A_NoBlocking();
		PLAY STUV 5;
		PLAY W -1;
		Stop;
	}
}

Class PopSkull : PlayerChunk
{
	Default
	{
		+MISSILE;
	
		Height 8; Radius 4;

		+ForceXYBillBoard
	
		+UseBounceState +BounceOnFloors +BounceOnActors +BounceOnWalls
		BounceType "Doom";
	
		Gravity 0.25;
	
		+NOSKIN
		-SOLID
		-SHOOTABLE
		-PICKUP
		-NOTDMATCH
		-FRIENDLY
		-SLIDESONWALLS
		-CANPUSHWALLS
		-WINDTHRUST
		-TELESTOMP
	}
	
	double goodangle;
	
	States
	{
	Bounce.Floor:
		#### # 0 { angle = goodangle; }
	Spawn:
		PHED AAAAAAA 1 { goodangle = angle; A_SetRoll(roll + 4, SPF_INTERPOLATE); }
		PHED A 1 
		{
			A_SpawnItemEx("Equestria_SmallBlood",FRandom(-4, 4),FRandom(-4, 4),FRandom(-4, 4), random(1, 2), random(1, 2),random(-2,2),frandom(0,360), SXF_USEBLOODCOLOR);
			A_SetRoll(roll + 6, SPF_INTERPOLATE);
			goodangle = angle;
		}
		loop;

	Death:
		#### # -1 A_CheckPlayerDone();
		Wait;
	}
}

Class EquestriaMarine : EquestriaDoomPlayer
{
	Default
	{
		Player.DisplayName "Marine";
		
		Player.StartItem "EquestriaPistol";
		Player.StartItem "Clip", 20;
	}
}