Version "4.8.0"

Class DebrisCore : Actor abstract
{
	int rollspd;

	property RollSpeed: rollspd;
	
	//string rollstt;
	
	//property RollState: rollstt;
	
	Default
	{
		+Missile
		+Corpse
		+NotAutoAimed
		+DropOff
		+NoBlockMap +NoTeleport +NoTrigger +NoBlockMonst
		+ForceXYBillboard
		+MoveWithSector
		+CanPass
		+ThruActors
		+ClientSideOnly
		+NOTONAUTOMAP
		
		-SOLID
		
		+ROLLSPRITE +ROLLCENTER
		
		DistanceCheck "CV_SFXDISTANCE";
		
		DebrisCore.RollSpeed 16;
		Damage 0;
		//DebrisCore.RollState "Roll";
	}
	override void Tick()
	{
		if (InStateSequence(CurState, ResolveState("Roll")) && !isFrozen())
			A_SetRoll((roll + rollspd), SPF_INTERPOLATE);
		
		Super.Tick();
	}
}

Class TerrainDebris : DebrisCore
{
	Default
	{
		DebrisCore.RollSpeed 8;
		Speed 4;
	}
	States
	{
	Spawn:
		DBRA ABCDEF 1;
		Loop;
	}
}

class SkyViewPointStatic : SkyViewPoint replaces SkyViewPoint
{
    PlayerPawn base;
    Vector3 basepos;
    int scaling;

    Default
    {
        //$Arg1 "Skybox Scene Scale"
        //$Arg1Tooltip "The scale of the skybox's scene (default is 100).  The larger this number is, the farther away the skybox contents will appear to be."
    }

    override void PostBeginPlay()
    {
        // Set the scaling value according to whatever arg 1 value is passed; use 100 if nothing provided
        scaling = args[1] == 0 ? 100 : args[1];

        // Save the spawn location vector for later
        SpawnPoint = pos;

        // Iterate through all of the possible players in the game
        for (int i = 0; i < MAXPLAYERS; i++)
        {
            // If a player is in the game and has spawned...
            if (playeringame[i] && players[i].mo)
            {
                if (!base) { base = players[i].mo; } // Set the skybox to follow the first player who is in the game
                else { base = null; break; } // If there are multiple players, don't move the skybox
            }
        }
    }

    override void Tick()
    {
        if (base)
        {
            Vector3 newvel;

            // Reset the viewpoint's height location
            double heightdelta = (base.pos.z - base.floorz) / scaling;
            SetOrigin((pos.x, pos.y, SpawnPoint.z + heightdelta), true);

            // Only move the viewpoint on the x/y axis if the player actually is moving along that axis; otherwise stay still
            if (basepos.x != base.pos.x) { newvel.x = base.vel.x; }
            if (basepos.y != base.pos.y) { newvel.y = base.vel.y; }
            newvel.z = -base.vel.z;

            // Adjust the move amount by scaling value
            newvel /= scaling;
            A_ChangeVelocity(newvel.x, newvel.y, newvel.z, CVF_RELATIVE | CVF_REPLACE);

            // Save the player's old position for the move checks
            basepos = base.pos;
        }

        Super.Tick();
    }
}

Class InvToken : Inventory
{	Default {	Inventory.MaxAmount 1;	+INVENTORY.QUIET; -INVENTORY.INVBAR;	}}

Class HUDDisabled : InvToken {}

Class Fall : InvToken {}
Class LowHealthCheck : InvToken	{}

/*ToDo
Class FoundHellPortal : InvToken {} //Season 1 End
Class FoundDaisy : InvToken	{} //DOOM 2
*/

//

//#include "ZScript/DeathFade.zsc"
#include "ZScript/Menus.zsc"
#include "ZScript/StatusScreen.zsc"
#include "ZScript/StatusBar.zsc"
#include "ZScript/SaveLoadMenu.zsc"
//#include "ZScript/BossHealthBar.zsc"
//#include "ZScript/ScreenEffects.zsc"

//

#include "Actors/Player.zsc"
#include "Actors/TitleMap.zsc"

//#include "Actors/Cores/PropsCore.zsc"
#include "Actors/Cores/WeaponCore.zsc"
#include "Actors/Cores/MonsterCore.zsc"
//#include "Actors/NPCs/Hellya.zsc"

////Effects, Particles, Debris

#include "Actors/Terrains.zsc"
#include "Actors/Particles.zsc"
#include "Actors/Puffs.zsc"

#include "Actors/Debris/Gibs_Generic.zsc"
#include "Actors/Debris/Gibs_Enemies.zsc"

////Weapons

#Include "Actors/Weapons/Casings.zsc"

#Include "Actors/Weapons/Broom.zsc"
#Include "Actors/Weapons/Fists.zsc"
#Include "Actors/Weapons/Pistol.zsc"
#Include "Actors/Weapons/Shotgun.zsc"
#Include "Actors/Weapons/SuperShotgun.zsc"
#Include "Actors/Weapons/Rifle.zsc"
#Include "Actors/Weapons/Chaingun.zsc"
#Include "Actors/Weapons/RocketLauncher.zsc"
#Include "Actors/Weapons/PlasmaGun.zsc"
#Include "Actors/Weapons/BFG9000.zsc"
#Include "Actors/Weapons/Chainsaw.zsc"

#Include "Actors/Weapons/MP40.zsc"

////Items/PowerUps

#include "Actors/Pickups/Keys.zsc"
#include "Actors/Pickups/Ammo.zsc"
#include "Actors/Pickups/Armor.zsc"
#include "Actors/Pickups/Health.zsc"
#include "Actors/Pickups/Powerups.zsc"

////Enemies

#include "Actors/Monsters/Arachnotron.zsc"
#include "Actors/Monsters/ArchVile.zsc"
#include "Actors/Monsters/Bruisers.zsc"
#include "Actors/Monsters/Cacodemon.zsc"
#include "Actors/Monsters/Imp.zsc"
#include "Actors/Monsters/LostSoul.zsc"
#include "Actors/Monsters/PainElemental.zsc"
#include "Actors/Monsters/Mancubus.zsc"
#include "Actors/Monsters/ZombiePony.zsc"
#include "Actors/Monsters/ShotgunGuy.zsc"
#include "Actors/Monsters/HeavyWeaponDude.zsc"
#include "Actors/Monsters/PossessedTrainer.zsc"
#include "Actors/Monsters/PossessedHacker.zsc"
#include "Actors/Monsters/Pinky.zsc"
#include "Actors/Monsters/Revenant.zsc"
#include "Actors/Monsters/Canines.zsc"
#include "Actors/Monsters/ScriptedMarines.zsc"
#include "Actors/Monsters/Axis.zsc"

#include "Actors/Monsters/Boss/Cyberdemon.zsc"
#include "Actors/Monsters/Boss/Night_Mare.zsc"
#include "Actors/Monsters/Boss/SpiderMastermind.zsc"

////Props

#include "Actors/Props/Spawners.zsc"
#include "Actors/Props/Facility.zsc"
#include "Actors/Props/Decals.zsc"
#include "Actors/Props/Nature.zsc"
#include "Actors/Props/Hell.zsc"
#include "Actors/Props/Gothic.zsc"
#include "Actors/Props/Gore.zsc"
#include "Actors/Props/Barrels.zsc"

#include "Actors/Props/Light_Tech.zsc"
#include "Actors/Props/Light_Hell.zsc"